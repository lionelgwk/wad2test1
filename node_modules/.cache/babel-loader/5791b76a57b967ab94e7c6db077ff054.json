{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Event Details Page\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Going with:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"p\", null, _toDisplayString($data.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Organised by \" + _toDisplayString($data.partyLeaderName), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activities, activity => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: activity.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(activity.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(activity.vicinity), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.friends, friend => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: friend.id\n    }, _toDisplayString(friend.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, _toDisplayString($data.date), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAA2B,YAAvB,oBAAkB;gCAStBA,oBAAkB,WAAf,aAAW;;;6DATdC,UAA2B,EAC3BD,oBAAgB,4BAAXE,WAAK,kBACVF,oBAAuC,WAApC,eAAa,oBAAEE,qBAAe,kBACjCF,oBAKK,gCAJDG,oBAGKC,6BAHkBF,gBAAU,EAAtBG,QAAQ;yBAAnBF,oBAGK;MAH+BG,GAAG,EAAED,QAAQ,CAACE;QAC9CP,oBAAwB,4BAAnBK,QAAQ,CAACG,IAAI,kBAClBR,oBAA4B,4BAAvBK,QAAQ,CAACI,QAAQ;oCAG9BC,UAAkB,EAClBV,oBAEK,gCADDG,oBAAmEC,6BAA9CF,aAAO,EAAjBS,MAAM;yBAAjBR,oBAAmE;MAApCG,GAAG,EAAEK,MAAM,CAACJ;wBAAMI,MAAM,CAACH,IAAI;oCAEhER,oBAAe,4BAAVE,UAAI","names":["_createElementVNode","_hoisted_1","$data","_createElementBlock","_Fragment","activity","key","id","name","vicinity","_hoisted_2","friend"],"sourceRoot":"","sources":["C:\\Users\\Dell\\Documents\\GitHub\\wad2test1\\src\\views\\EventDetails.vue"],"sourcesContent":["<template>\r\n    <h1>Event Details Page</h1>\r\n    <p>{{title}}</p>\r\n    <p>Organised by {{partyLeaderName}}</p>\r\n    <ul>\r\n        <li v-for=\"activity in activities\" :key=\"activity.id\">\r\n            <p>{{activity.name}}</p>\r\n            <p>{{activity.vicinity}}</p>\r\n        </li>\r\n    </ul>\r\n    <p>Going with:</p>\r\n    <ul>\r\n        <li v-for=\"friend in friends\" :key=\"friend.id\">{{friend.name}}</li>\r\n    </ul>\r\n    <p>{{date}}</p>\r\n</template>\r\n\r\n<script>\r\nimport db from '@/fb';\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nexport default {\r\n    name: \"EventDetails\",\r\n    props: ['id'],\r\n    data(){\r\n        return{\r\n            activities: [],\r\n            date: '',\r\n            friends: [],\r\n            partyLeader: '',\r\n            partyLeaderName: '',\r\n            title: ''\r\n        }\r\n    },\r\n    async mounted(){\r\n        const docRef = doc(db, \"parties\", this.id);\r\n        const docSnap = await getDoc(docRef);\r\n        console.log(docSnap.data().activities);\r\n        const collection = docSnap.data();\r\n        this.activities = collection.activities;\r\n        this.date = collection.date;\r\n        this.friends = collection.friends;\r\n        this.partyLeader = collection.partyLeader;\r\n        this.partyLeaderName = collection.partyLeaderName;\r\n        this.title = collection.title;\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}