{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"input\", {\n    type: \"text\",\n    ref: \"latLngRef\",\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:latLng', $event.target.value)),\n    value: $props.latLng,\n    placeholder: \"Enter a place\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1), _createElementVNode(\"input\", {\n    type: \"text\",\n    ref: \"addRef\",\n    onInput: _cache[1] || (_cache[1] = $event => _ctx.$emit('update:add', $event.target.value)),\n    value: $props.add,\n    placeholder: \"Enter a place\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DACIA,oBAAoI;IAA7HC,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,WAAW;IAAEC,OAAK,sCAAEC,UAAK,kBAAkBC,MAAM,CAACC,MAAM,CAACC,KAAK;IAAIA,KAAK,EAAEC,aAAM;IAAEC,WAAW,EAAC;wDACpHT,oBAA2H;IAApHC,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,QAAQ;IAAEC,OAAK,sCAAEC,UAAK,eAAeC,MAAM,CAACC,MAAM,CAACC,KAAK;IAAIA,KAAK,EAAEC,UAAG;IAAEC,WAAW,EAAC","names":["_createElementVNode","type","ref","onInput","_ctx","$event","target","value","$props","placeholder"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/components/PlaceAutocomplete.vue"],"sourcesContent":["<template>\n    <input type=\"text\" ref=\"latLngRef\" @input=\"$emit('update:latLng', $event.target.value)\" :value=\"latLng\" placeholder=\"Enter a place\">\n    <input type=\"text\" ref=\"addRef\" @input=\"$emit('update:add', $event.target.value)\" :value=\"add\" placeholder=\"Enter a place\">\n</template>\n\n\n\n<script>\n\n/* eslint-disable */\n\nimport { ref, onMounted } from 'vue';\n\n\nexport default {\n    props:{\n        add:{\n            type: String,\n            default: ''\n        },\n        latLng:{\n            type: String,\n            default: ''\n        }\n    },\n    setup(){\n        const addRef = ref();\n        const latLngRef = ref();\n\n        onMounted(() => {\n            const autoComplete = new google.maps.places.Autocomplete(addRef.value, {\n                types: ['address'],\n                fields: ['address_components', 'geometry']\n            });\n\n            autoComplete.addListener('place_changed', () => {\n                const place = autoComplete.getPlace();\n                const lat = place.geometry.location.lat();\n                const lng = place.geometry.location.lng();\n                latLngRef.value = `${lat}, ${lng}`;\n            });\n        })\n        return { addRef, latLngRef }\n    }\n}\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}