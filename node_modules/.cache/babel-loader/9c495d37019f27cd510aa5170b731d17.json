{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_g_map = _resolveComponent(\"g-map\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"createevent\\\">\\n      <div ref=\\\"mapDiv\\\">\\n        <GoogleMap api-key=\\\"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\\\" style=\\\"width: 100%; height: 500px\\\" :center=\\\"center\\\" :zoom=\\\"15\\\">\\n              <Marker :options=\\\"{ position: center }\\\" />\\n        </GoogleMap>\\n      </div>\\n    </div> \"), _createCommentVNode(\" <div>\\n      <h4>Position</h4>\\n      <h5>Latitude: {{currPos.lat.toFixed(2)}}</h5>\\n      <h5>Longitude: {{currPos.lng.toFixed(2)}}</h5>\\n    </div>\\n    <div ref=\\\"mapDiv\\\" style=\\\"width: 100%; height: 80vh\\\"/> \"), _createVNode(_component_g_map, {\n    disableUI: true,\n    zoom: 15,\n    mapType: \"roadmap\",\n    center: {\n      lat: 38.8977859,\n      lng: -77.0057621\n    },\n    markers: $setup.markers\n  }, null, 8 /* PROPS */, [\"center\", \"markers\"]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.addLocation && _ctx.addLocation(...args))\n  }, \"Add Location\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;6DACIA,0UAMU,EAEVA,6OAKyD,EACzDC,aAA6HC;IAArHC,SAAS,EAAE,IAAI;IAAGC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAC,SAAS;IAAEC,MAAM,EAAE;MAAAC;MAAAC;IAAA,CAAiC;IAAGC,OAAO,EAAEC;kDAE5GC,oBAEM,cADJA,oBAAkD;IAAzCC,OAAK,yCAAEC,6CAAW;KAAE,cAAY","names":["_createCommentVNode","_createVNode","_component_g_map","disableUI","zoom","mapType","center","lat","lng","markers","$setup","_createElementVNode","onClick","_ctx"],"sourceRoot":"","sources":["/Users/caitlinyap/Documents/GitHub/wad2test1/src/views/CreateEvent.vue"],"sourcesContent":["<template>\n    <!-- <div class=\"createevent\">\n      <div ref=\"mapDiv\">\n        <GoogleMap api-key=\"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\" style=\"width: 100%; height: 500px\" :center=\"center\" :zoom=\"15\">\n              <Marker :options=\"{ position: center }\" />\n        </GoogleMap>\n      </div>\n    </div> -->\n\n    <!-- <div>\n      <h4>Position</h4>\n      <h5>Latitude: {{currPos.lat.toFixed(2)}}</h5>\n      <h5>Longitude: {{currPos.lng.toFixed(2)}}</h5>\n    </div>\n    <div ref=\"mapDiv\" style=\"width: 100%; height: 80vh\"/> -->\n    <g-map :disableUI=\"true\" :zoom=\"15\" mapType=\"roadmap\" :center=\"{lat:38.8977859, lng:-77.0057621}\" :markers=\"markers\"></g-map>\n\n    <div>\n      <button @click=\"addLocation\">Add Location</button>\n    </div>\n  </template>\n  \n<script>\n  // @ is an alias to /src\n\n  /* eslint-disable */\n  import { onMounted, ref } from \"vue\";\n  import { computed } from 'vue'\n  import { useGeolocation } from '../useGeolocation'\n  import { Loader } from '@googlemaps/js-api-loader'\n  import { GoogleMap, Marker } from \"vue3-google-map\";\n  import { watch } from 'vue';\n  import GMap from \"@/components/GMap.vue\"\n\n  const GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4'\n\n  export default ({\n    name: 'CreateEvent',\n    components: {GoogleMap, Marker, GMap},\n    setup(){\n\n      const markers = red <any> [\n        {lat:38.8977859, lng:-77.0057621, title: 'Union Station'},\n        {lat:38.8976763 , lng:-77.0365298, title: 'White House'}\n      ]\n      const {coords} = useGeolocation()\n\n      \n\n      const currPos = computed (() => ({\n        lat: coords.value.latitude,\n        lng: coords.value.longitude\n      }))\n      \n\n      \n\n\n\n      const loader = new Loader ({apiKey: GOOGLE_MAPS_API_KEY})\n      const mapDiv = ref(null)\n      let map = ref(null)\n\n      \n      onMounted(async () => {\n        await loader.load()\n        map = new google.maps.Map(mapDiv.value, {\n          center: currPos.value,\n          zoom: 15\n        })\n        \n      }),\n\n      watch(currPos, () => {\n        map.setCenter(currPos.value)\n      });\n\n      const handleMapDidLoad = () => {\n        console.log(\"handleMapDidLoad\")\n      }\n\n      return {currPos, mapDiv, handleMapDidLoad, markers}\n    }\n  });\n  \n\n</script>\n  "]},"metadata":{},"sourceType":"module"}