{"ast":null,"code":"// @ is an alias to /src\n\n/* eslint-disable */\nimport { onMounted, ref } from \"vue\";\nimport { computed } from 'vue';\nimport { useGeolocation } from '../useGeolocation';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { GoogleMap, Marker } from \"vue3-google-map\";\nimport { watch } from 'vue';\nimport VueGeolocation from \"vue3-geolocation\";\nimport GMaps from \"vuejs3-google-maps\";\nlet app = createApp(App);\napp.use(VueGeolocation);\napp.use(GMaps, {\n  load: {\n    apiKey: \"your-api-key\",\n    libraries: [\"places\"]\n  }\n});\napp.mount(\"#app\");\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4';\nexport default {\n  name: 'CreateEvent',\n  components: {\n    GoogleMap,\n    Marker\n  },\n  setup() {\n    const {\n      coords\n    } = useGeolocation();\n    const currPos = computed(() => ({\n      lat: coords.value.latitude,\n      lng: coords.value.longitude\n    }));\n    const loader = new Loader({\n      apiKey: GOOGLE_MAPS_API_KEY\n    });\n    const mapDiv = ref(null);\n    let map = ref(null);\n    onMounted(async () => {\n      await loader.load();\n      map = new google.maps.Map(mapDiv.value, {\n        center: currPos.value,\n        zoom: 15\n      });\n    }), watch(currPos, () => {\n      map.setCenter(currPos.value);\n    });\n    const handleMapDidload = () => {\n      console.log('handleMapDidLoad');\n    };\n    const searchLocation = () => {\n      geoCoderService.geocode({\n        address: location.value\n      }, () => {});\n    };\n    return {\n      currPos,\n      mapDiv\n    };\n  }\n};","map":{"version":3,"mappings":"AAwBE;;AAEA;AACA,SAASA,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,KAAI;AAC7B,SAASC,cAAa,QAAS,mBAAkB;AACjD,SAASC,MAAK,QAAS,2BAA0B;AACjD,SAASC,SAAS,EAAEC,MAAK,QAAS,iBAAiB;AACnD,SAASC,KAAI,QAAS,KAAI;AAC1B,OAAOC,cAAa,MAAO,kBAAiB;AAC5C,OAAOC,KAAI,MAAO,oBAAmB;AAErC,IAAIC,GAAE,GAAIC,SAAS,CAACC,GAAG,CAAC;AAE1BF,GAAG,CAACG,GAAG,CAACL,cAAc,CAAC;AACvBE,GAAG,CAACG,GAAG,CAACJ,KAAK,EAAE;EACbK,IAAI,EAAE;IACJC,MAAM,EAAE,cAAc;IACtBC,SAAS,EAAE,CAAC,QAAQ;EACtB;AACF,CAAC,CAAC;AAEFN,GAAG,CAACO,KAAK,CAAC,MAAM,CAAC;AAEf,MAAMC,mBAAkB,GAAI,yCAAwC;AAEpE,eAAgB;EACdC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAACf,SAAS;IAAEC;EAAM,CAAC;EAC/Be,KAAK,GAAE;IAEL,MAAM;MAACC;IAAM,IAAInB,cAAc,EAAC;IAEhC,MAAMoB,OAAM,GAAIrB,QAAO,CAAG,OAAO;MAC/BsB,GAAG,EAAEF,MAAM,CAACG,KAAK,CAACC,QAAQ;MAC1BC,GAAG,EAAEL,MAAM,CAACG,KAAK,CAACG;IACpB,CAAC,CAAC;IAEF,MAAMC,MAAK,GAAI,IAAIzB,MAAK,CAAG;MAACW,MAAM,EAAEG;IAAmB,CAAC;IACxD,MAAMY,MAAK,GAAI7B,GAAG,CAAC,IAAI;IACvB,IAAI8B,GAAE,GAAI9B,GAAG,CAAC,IAAI;IAGlBD,SAAS,CAAC,YAAY;MACpB,MAAM6B,MAAM,CAACf,IAAI,EAAC;MAClBiB,GAAE,GAAI,IAAIC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACJ,MAAM,CAACL,KAAK,EAAE;QACtCU,MAAM,EAAEZ,OAAO,CAACE,KAAK;QACrBW,IAAI,EAAE;MACR,CAAC;IAEH,CAAC,CAAC,EAEF7B,KAAK,CAACgB,OAAO,EAAE,MAAM;MACnBQ,GAAG,CAACM,SAAS,CAACd,OAAO,CAACE,KAAK;IAC7B,CAAC,CAAC;IAEF,MAAMa,gBAAe,GAAI,MAAM;MAC7BC,OAAO,CAACC,GAAG,CAAC,kBAAkB;IAChC;IAEA,MAAMC,cAAa,GAAI,MAAM;MAC3BC,eAAe,CAACC,OAAO,CACrB;QAACC,OAAO,EAACC,QAAQ,CAACpB;MAAK,CAAC,EACxB,MAAM,CAEN,EACF;IACF;IAMA,OAAO;MAACF,OAAO;MAAEO;IAAM;EACzB;AACF,CAAC","names":["onMounted","ref","computed","useGeolocation","Loader","GoogleMap","Marker","watch","VueGeolocation","GMaps","app","createApp","App","use","load","apiKey","libraries","mount","GOOGLE_MAPS_API_KEY","name","components","setup","coords","currPos","lat","value","latitude","lng","longitude","loader","mapDiv","map","google","maps","Map","center","zoom","setCenter","handleMapDidload","console","log","searchLocation","geoCoderService","geocode","address","location"],"sourceRoot":"","sources":["/Users/caitlinyap/Documents/GitHub/wad2test1/src/views/CreateEvent.vue"],"sourcesContent":["<template>\n    <!-- <div class=\"createevent\">\n      <div ref=\"mapDiv\">\n        <GoogleMap api-key=\"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\" style=\"width: 100%; height: 500px\" :center=\"center\" :zoom=\"15\">\n              <Marker :options=\"{ position: center }\" />\n        </GoogleMap>\n      </div>\n    </div> -->\n\n    <div>\n      <h4>Position</h4>\n      <h5>Latitude: {{currPos.lat.toFixed(2)}}</h5>\n      <h5>Longitude: {{currPos.lng.toFixed(2)}}</h5>\n    </div>\n    <div ref=\"mapDiv\" style=\"width: 100%; height: 80vh\"/>\n    <div><br>\n      <input type=\"text\" placeholder=\"Entire your party location\" v-model=\"location\">\n    </div><br>\n    <div>\n      <button onClick=\"searchLocation\">Search Location</button>\n    </div>\n  </template>\n  \n<script>\n  // @ is an alias to /src\n\n  /* eslint-disable */\n  import { onMounted, ref } from \"vue\";\n  import { computed } from 'vue'\n  import { useGeolocation } from '../useGeolocation'\n  import { Loader } from '@googlemaps/js-api-loader'\n  import { GoogleMap, Marker } from \"vue3-google-map\";\n  import { watch } from 'vue'\n  import VueGeolocation from \"vue3-geolocation\"\n  import GMaps from \"vuejs3-google-maps\"\n\n  let app = createApp(App);\n\napp.use(VueGeolocation);\napp.use(GMaps, {\n  load: {\n    apiKey: \"your-api-key\",\n    libraries: [\"places\"],\n  },\n});\n\napp.mount(\"#app\");\n\n  const GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4'\n\n  export default ({\n    name: 'CreateEvent',\n    components: {GoogleMap, Marker},\n    setup(){\n\n      const {coords} = useGeolocation()\n\n      const currPos = computed (() => ({\n        lat: coords.value.latitude,\n        lng: coords.value.longitude\n      }))\n      \n      const loader = new Loader ({apiKey: GOOGLE_MAPS_API_KEY})\n      const mapDiv = ref(null)\n      let map = ref(null)\n\n      \n      onMounted(async () => {\n        await loader.load()\n        map = new google.maps.Map(mapDiv.value, {\n          center: currPos.value,\n          zoom: 15\n        })\n        \n      }),\n\n      watch(currPos, () => {\n        map.setCenter(currPos.value)\n      });\n\n      const handleMapDidload = () => {\n        console.log('handleMapDidLoad')\n      }\n\n      const searchLocation = () => {\n        geoCoderService.geocode( \n          {address:location.value},\n          () => {\n\n          }\n        )\n      }\n\n\n\n\n\n      return {currPos, mapDiv}\n    }\n  });\n  \n\n</script>\n  "]},"metadata":{},"sourceType":"module"}