{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport HomeView from '../views/HomeView.vue';\nimport AboutView from '../views/AboutView.vue';\nimport MyEvents from '../views/MyEvents.vue';\nimport CreateEvent from '../views/CreateEvent.vue';\nimport RegisterAccount from '../views/RegisterAccount.vue';\nimport SignIn from '../views/SignIn.vue';\nimport HomeLogin from '../views/HomeLogin.vue';\n\n/* eslint-disable no-unused-vars */\n\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/about',\n  name: 'about',\n  component: AboutView\n}, {\n  path: '/myevents',\n  name: 'myevents',\n  component: MyEvents,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/homelogin',\n  name: 'homelogin',\n  component: HomeLogin,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/createevent',\n  name: 'createevent',\n  component: CreateEvent,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/registeraccount',\n  name: 'registeraccount',\n  component: RegisterAccount\n}, {\n  path: '/signin',\n  name: 'signin',\n  component: SignIn\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\nexport default router;\nconst getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const removeListener = onAuthStateChanged(getAuth(), user => {\n      removeListener();\n      resolve(user);\n    }, reject);\n  });\n};\nrouter.beforeEach((to, from) => {\n  // instead of having to check every route record with\n  // to.matched.some(record => record.meta.requiresAuth)\n  if (to.meta.requiresAuth && !auth.isLoggedIn()) {\n    // this route requires auth, check if logged in\n    // if not, redirect to login page.\n    return {\n      path: '/login',\n      // save the location we were at to come back later\n      query: {\n        redirect: to.fullPath\n      }\n    };\n  }\n});\n\n// router.beforeEach(async(to, from, next) => {\n//   if (to.matched.some((record) => record.meta.requiresAuth)) {\n//     if (await getCurrentUser()) {\n//       next();\n//     }\n//     else{\n//       alert(\"No access!\");\n//       next(\"/\");\n//     }\n//   }\n//   else{\n//     next();\n//   }\n// });","map":{"version":3,"names":["createRouter","createWebHashHistory","getAuth","onAuthStateChanged","HomeView","AboutView","MyEvents","CreateEvent","RegisterAccount","SignIn","HomeLogin","routes","path","name","component","meta","requiresAuth","router","history","getCurrentUser","Promise","resolve","reject","removeListener","user","beforeEach","to","from","auth","isLoggedIn","query","redirect","fullPath"],"sources":["/Users/lionel/Documents/GitHub/wad2test1/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\"; \nimport HomeView from '../views/HomeView.vue'\nimport AboutView from '../views/AboutView.vue'\nimport MyEvents from '../views/MyEvents.vue'\nimport CreateEvent from '../views/CreateEvent.vue'\nimport RegisterAccount from '../views/RegisterAccount.vue'\nimport SignIn from '../views/SignIn.vue'\nimport HomeLogin from '../views/HomeLogin.vue'\n\n/* eslint-disable no-unused-vars */\n\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    component: AboutView\n  },\n  {\n    path: '/myevents',\n    name: 'myevents',\n    component: MyEvents,\n    meta: {\n      requiresAuth: true,\n    }\n  },\n  {\n    path: '/homelogin',\n    name: 'homelogin',\n    component: HomeLogin,\n    meta: {\n      requiresAuth: true,\n    }\n  },\n  {\n    path: '/createevent',\n    name: 'createevent',\n    component: CreateEvent,\n    meta: {\n      requiresAuth: true,\n    }\n  },\n  {\n    path: '/registeraccount',\n    name: 'registeraccount',\n    component: RegisterAccount\n  },\n  {\n    path: '/signin',\n    name: 'signin',\n    component: SignIn\n  }\n  \n\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n\nconst getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const removeListener = onAuthStateChanged(\n      getAuth(),\n      (user) => {\n        removeListener();\n        resolve(user);\n      },\n      reject\n    );\n  });\n}\n\nrouter.beforeEach((to, from) => {\n  // instead of having to check every route record with\n  // to.matched.some(record => record.meta.requiresAuth)\n  if (to.meta.requiresAuth && !auth.isLoggedIn()) {\n    // this route requires auth, check if logged in\n    // if not, redirect to login page.\n    return {\n      path: '/login',\n      // save the location we were at to come back later\n      query: { redirect: to.fullPath },\n    }\n  }\n})\n\n// router.beforeEach(async(to, from, next) => {\n//   if (to.matched.some((record) => record.meta.requiresAuth)) {\n//     if (await getCurrentUser()) {\n//       next();\n//     }\n//     else{\n//       alert(\"No access!\");\n//       next(\"/\");\n//     }\n//   }\n//   else{\n//     next();\n//   }\n// });"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAC/D,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;;AAGA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAER,QAAQ;EACnBS,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEJ,SAAS;EACpBK,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEP,WAAW;EACtBQ,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEL;AACb,CAAC,CAGF;AAED,MAAMQ,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,oBAAoB,EAAE;EAC/BU;AACF,CAAC,CAAC;AAEF,eAAeM,MAAM;AAErB,MAAME,cAAc,GAAG,MAAM;EAC3B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,cAAc,GAAGpB,kBAAkB,CACvCD,OAAO,EAAE,EACRsB,IAAI,IAAK;MACRD,cAAc,EAAE;MAChBF,OAAO,CAACG,IAAI,CAAC;IACf,CAAC,EACDF,MAAM,CACP;EACH,CAAC,CAAC;AACJ,CAAC;AAEDL,MAAM,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,KAAK;EAC9B;EACA;EACA,IAAID,EAAE,CAACX,IAAI,CAACC,YAAY,IAAI,CAACY,IAAI,CAACC,UAAU,EAAE,EAAE;IAC9C;IACA;IACA,OAAO;MACLjB,IAAI,EAAE,QAAQ;MACd;MACAkB,KAAK,EAAE;QAAEC,QAAQ,EAAEL,EAAE,CAACM;MAAS;IACjC,CAAC;EACH;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}