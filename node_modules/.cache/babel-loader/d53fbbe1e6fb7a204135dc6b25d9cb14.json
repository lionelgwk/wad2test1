{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport AOS from 'aos';\nimport VueGeolocation from \"vue3-geolocation\";\nimport GMaps from \"vuejs3-google-maps\";\nimport SuiVue from 'semantic-ui-vue';\nimport Toast from \"vue-toastification\";\nimport \"vue-toastification/dist/index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap\";\nimport 'aos/dist/aos.css';\nimport { initializeApp } from \"firebase/app\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDug7cjjrHQnH2kXpXXNNmfAcNWzfy524E\",\n  authDomain: \"wad2test1.firebaseapp.com\",\n  databaseURL: \"https://wad2test1-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"wad2test1\",\n  storageBucket: \"wad2test1.appspot.com\",\n  messagingSenderId: \"1079852291342\",\n  appId: \"1:1079852291342:web:b9452aa94fc57c5ce2735f\",\n  measurementId: \"G-43TS1XSPJ9\"\n};\n/* eslint-disable */\n// Initialize Firebase\nconst firebaseapp = initializeApp(firebaseConfig);\nconst cors = require(\"cors\");\nconst corsOptions = {\n  origin: '*',\n  credentials: true,\n  //access-control-allow-credentials:true\n  optionSuccessStatus: 200\n};\n\n// Use this after the variable declaration\n\nlet app = createApp(App);\napp.use(VueGeolocation);\napp.use(GMaps, {\n  load: {\n    apiKey: \"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\",\n    libraries: ['places']\n  }\n});\napp.use(Toast, options);\napp.use(store).use(router).use(AOS.init()).use(SuiVue).use(cors(corsOptions)).mount('#app');","map":{"version":3,"names":["createApp","App","router","store","AOS","VueGeolocation","GMaps","SuiVue","Toast","initializeApp","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseapp","cors","require","corsOptions","origin","credentials","optionSuccessStatus","app","use","load","libraries","options","init","mount"],"sources":["/Users/lionel/Documents/GitHub/wad2test1/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport AOS from 'aos'\nimport VueGeolocation from \"vue3-geolocation\";\nimport GMaps from \"vuejs3-google-maps\";\nimport SuiVue from 'semantic-ui-vue';\nimport Toast from \"vue-toastification\";\nimport \"vue-toastification/dist/index.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap\"\nimport 'aos/dist/aos.css'\n\nimport { initializeApp } from \"firebase/app\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDug7cjjrHQnH2kXpXXNNmfAcNWzfy524E\",\n  authDomain: \"wad2test1.firebaseapp.com\",\n  databaseURL: \"https://wad2test1-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"wad2test1\",\n  storageBucket: \"wad2test1.appspot.com\",\n  messagingSenderId: \"1079852291342\",\n  appId: \"1:1079852291342:web:b9452aa94fc57c5ce2735f\",\n  measurementId: \"G-43TS1XSPJ9\"\n};\n/* eslint-disable */\n// Initialize Firebase\nconst firebaseapp = initializeApp(firebaseConfig);\n\nconst cors=require(\"cors\");\nconst corsOptions ={\n   origin:'*', \n   credentials:true,            //access-control-allow-credentials:true\n   optionSuccessStatus:200,\n}\n\n// Use this after the variable declaration\n\nlet app = createApp(App);\napp.use(VueGeolocation); \napp.use(GMaps, {\n    load: {\n        apiKey: \"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\",\n        libraries: ['places']\n    }\n});\napp.use(Toast, options);\napp.use(store).use(router).use(AOS.init()).use(SuiVue).use(cors(corsOptions)).mount('#app')\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,mCAAmC;AAE1C,OAAO,sCAAsC;AAC7C,OAAO,WAAW;AAClB,OAAO,kBAAkB;AAEzB,SAASC,aAAa,QAAQ,cAAc;;AAE5C;AACA;;AAEA;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,2BAA2B;EACvCC,WAAW,EAAE,qEAAqE;EAClFC,SAAS,EAAE,WAAW;EACtBC,aAAa,EAAE,uBAAuB;EACtCC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE,4CAA4C;EACnDC,aAAa,EAAE;AACjB,CAAC;AACD;AACA;AACA,MAAMC,WAAW,GAAGV,aAAa,CAACC,cAAc,CAAC;AAEjD,MAAMU,IAAI,GAACC,OAAO,CAAC,MAAM,CAAC;AAC1B,MAAMC,WAAW,GAAE;EAChBC,MAAM,EAAC,GAAG;EACVC,WAAW,EAAC,IAAI;EAAa;EAC7BC,mBAAmB,EAAC;AACvB,CAAC;;AAED;;AAEA,IAAIC,GAAG,GAAG1B,SAAS,CAACC,GAAG,CAAC;AACxByB,GAAG,CAACC,GAAG,CAACtB,cAAc,CAAC;AACvBqB,GAAG,CAACC,GAAG,CAACrB,KAAK,EAAE;EACXsB,IAAI,EAAE;IACFjB,MAAM,EAAE,yCAAyC;IACjDkB,SAAS,EAAE,CAAC,QAAQ;EACxB;AACJ,CAAC,CAAC;AACFH,GAAG,CAACC,GAAG,CAACnB,KAAK,EAAEsB,OAAO,CAAC;AACvBJ,GAAG,CAACC,GAAG,CAACxB,KAAK,CAAC,CAACwB,GAAG,CAACzB,MAAM,CAAC,CAACyB,GAAG,CAACvB,GAAG,CAAC2B,IAAI,EAAE,CAAC,CAACJ,GAAG,CAACpB,MAAM,CAAC,CAACoB,GAAG,CAACP,IAAI,CAACE,WAAW,CAAC,CAAC,CAACU,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module"}