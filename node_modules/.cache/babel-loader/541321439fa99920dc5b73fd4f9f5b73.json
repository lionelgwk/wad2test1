{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-36c7e925\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"map\",\n  ref: \"mapDivRef\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC,KAAK;EAACC,GAAG,EAAC;;;uBAArBC,oBAEM,OAFNC,UAEM","names":["class","ref","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/Users/caitlinyap/Documents/GitHub/wad2test1/src/components/GMap.vue"],"sourcesContent":["<template>\n    <div class=\"map\" ref=\"mapDivRef\">\n\n    </div>\n</template>\n\n<script>\n// import { objectExpression } from \"@babel/types\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n    name: \"GMap\", \n    props: {\n        center: { lat: Number, lng: Number },\n        zoom: Number,\n        mapType: String,\n        disableUI: Boolean,\n        markers: Array\n    },\n    setup(props) {\n        //the google map object\n        const map = ref(null);\n\n        //the map element in the template \n        const mapDivRef = ref(null);\n\n        //load in the google script \n        onMounted(() => {\n            //key is in the .env file\n\n            //create the script\n            const googleMapScript = document.createElement(\"SCRIPT\");\n            googleMapScript.setAttribute(\"src\", `https://maps.googleapis.com/maps/api/js?key=AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4&callback=initMap`);\n            googleMapScript.setAttribute(\"defer\", \"\");\n            googleMapScript.setAttribute(\"async\", \"\");\n            document.head.appendChild(googleMapScript);\n\n        });\n\n        //this function is claled as soon as the map is initialised\n        window.initMap = () => {\n            map.value = new window.google.maps.Map(mapDivRef.value, {mapTypeId: props.mapType || 'hybrid', zoom: props.zoom || 8, disableDefaultUI: props.disableUI || false, center: props.center || {lat:103.852119, lng:1.296568}\n            });\n        };\n\n        return {\n            mapDivRef\n        }\n    }\n \n}\n</script>\n\n<style lang=\"css\" scoped>\n.map {\n    width:100%;\n    height:300px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}