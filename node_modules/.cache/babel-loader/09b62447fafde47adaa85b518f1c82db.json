{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    class: _normalizeClass([\"btn\", $setup.getClasses($props.variant, $props.color, $props.size, $props.fullWidth, $props.disabled)])\n  }, [_renderSlot(_ctx.$slots, \"default\")], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;uBAiEEA,oBAKS;IAJPC,KAAK,mBAAC,KAAK,EACHC,iBAAU,CAACC,cAAO,EAAEA,YAAK,EAAEA,WAAI,EAAEA,gBAAS,EAAEA,eAAQ;MAE5DC,YAAQC","names":["_createElementBlock","class","$setup","$props","_renderSlot","_ctx"],"sourceRoot":"","sources":["C:\\Users\\Dell\\Documents\\GitHub\\wad2test1\\src\\components\\MaterialButton.vue"],"sourcesContent":["<script setup>\r\n/* eslint-disable */\r\ndefineProps({\r\n  variant: {\r\n    type: String,\r\n    validator(variant) {\r\n      return [\"contained\", \"gradient\", \"outline\"].includes(variant);\r\n    },\r\n    default: \"contained\",\r\n  },\r\n  color: {\r\n    validator(color) {\r\n      return [\r\n        \"primary\",\r\n        \"secondary\",\r\n        \"info\",\r\n        \"success\",\r\n        \"warning\",\r\n        \"danger\",\r\n        \"error\",\r\n        \"light\",\r\n        \"white\",\r\n        \"dark\",\r\n        \"none\",\r\n      ].includes(color);\r\n    },\r\n    default: \"\",\r\n  },\r\n  size: {\r\n    validator(size) {\r\n      return [\"sm\", \"md\", \"lg\"].includes(size);\r\n    },\r\n    default: \"md\",\r\n  },\r\n  fullWidth: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n});\r\nfunction getClasses(variant, color, size, fullWidth, disabled) {\r\n  let colorValue, sizeValue, fullWidthValue, activeValue;\r\n\r\n  // Setting the button variant and color\r\n  if (variant === \"gradient\") {\r\n    colorValue = `bg-gradient-${color}`;\r\n  } else if (variant === \"outline\") {\r\n    colorValue = `btn-outline-${color}`;\r\n  } else {\r\n    colorValue = `btn-${color}`;\r\n  }\r\n\r\n  sizeValue = size && `btn-${size}`;\r\n\r\n  fullWidthValue = fullWidth && `w-100`;\r\n\r\n  activeValue = disabled && `disabled`;\r\n\r\n  return `${colorValue} ${sizeValue} ${fullWidthValue} ${activeValue}`;\r\n}\r\n</script>\r\n<template>\r\n  <button\r\n    class=\"btn\"\r\n    :class=\"getClasses(variant, color, size, fullWidth, disabled)\"\r\n  >\r\n    <slot />\r\n  </button>\r\n</template>"]},"metadata":{},"sourceType":"module"}