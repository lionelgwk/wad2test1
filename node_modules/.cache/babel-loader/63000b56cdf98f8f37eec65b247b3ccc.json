{"ast":null,"code":"/* eslint-disable */\n\nimport { ref, onMounted } from 'vue';\nexport default {\n  props: {\n    add: {\n      type: String,\n      default: ''\n    },\n    latLng: {\n      type: String,\n      default: ''\n    }\n  },\n  setup() {\n    const addRef = ref();\n    const latLngRef = ref();\n    const options = {\n      fields: [\"formatted_address\", \"geometry\"],\n      strictBounds: false,\n      types: [\"establishment\"]\n    };\n    onMounted(() => {\n      const autocomplete = new google.maps.places.Autocomplete(addRef.value, options);\n      autocomplete.addListener(\"place_changed\", () => {\n        const place = autocomplete.getPlace();\n        console.log(place);\n        if (!place.geometry || !place.geometry.location) {\n          return;\n        }\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n        const latLng = `${lat}, ${lng}`;\n        const add = place.formatted_address;\n        // this.$emit('update:latLng', latLng);\n        // this.$emit('update:add', add);\n      });\n\n      // const add = new google.maps.places.Autocomplete(addRef.value, {\n      //     types: ['address'],\n      //     fields: ['address_components']\n      // });\n\n      // const autoCompleteLatLng = new google.maps.places.Autocomplete(latLngRef.value, {\n      //     types: ['geometry'],\n      //     fields: ['address_components']\n      // });\n    });\n\n    return {\n      addRef,\n      latLngRef\n    };\n  }\n};","map":{"version":3,"mappings":"AASA;;AAEA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAGpC,eAAe;EACXC,KAAK,EAAC;IACFC,GAAG,EAAC;MACAC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb,CAAC;IACDC,MAAM,EAAC;MACHH,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb;EACJ,CAAC;EACDE,KAAK,GAAE;IACH,MAAMC,MAAK,GAAIT,GAAG,EAAE;IACpB,MAAMU,SAAQ,GAAIV,GAAG,EAAE;IAEvB,MAAMW,OAAM,GAAI;MACZC,MAAM,EAAE,CAAC,mBAAmB,EAAE,UAAU,CAAC;MACzCC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAE,CAAC,eAAe;IAC3B,CAAC;IAEDb,SAAS,CAAC,MAAM;MAEZ,MAAMc,YAAW,GAAI,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACV,MAAM,CAACW,KAAK,EAAET,OAAO,CAAC;MAC/EI,YAAY,CAACM,WAAW,CAAC,eAAe,EAAE,MAAM;QAC5C,MAAMC,KAAI,GAAIP,YAAY,CAACQ,QAAQ,EAAE;QACjCC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;QACtB,IAAI,CAACA,KAAK,CAACI,QAAO,IAAK,CAACJ,KAAK,CAACI,QAAQ,CAACC,QAAQ,EAAE;UAC7C;QACJ;QACA,MAAMC,GAAE,GAAIN,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,EAAE;QACzC,MAAMC,GAAE,GAAIP,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACE,GAAG,EAAE;QACzC,MAAMtB,MAAK,GAAK,GAAEqB,GAAI,KAAIC,GAAI,EAAC;QAC/B,MAAM1B,GAAE,GAAImB,KAAK,CAACQ,iBAAiB;QACnC;QACA;MACJ,CAAC,CAAC;;MAGF;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;IACJ,CAAC;;IACD,OAAO;MAAErB,MAAM;MAAEC;IAAU;EAC/B;AACJ","names":["ref","onMounted","props","add","type","String","default","latLng","setup","addRef","latLngRef","options","fields","strictBounds","types","autocomplete","google","maps","places","Autocomplete","value","addListener","place","getPlace","console","log","geometry","location","lat","lng","formatted_address"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/components/PlaceAutocomplete.vue"],"sourcesContent":["<template>\n    <input type=\"text\" ref=\"latLngRef\" @input=\"$emit('update:latLng', $event.target.value)\" :value=\"latLng\" placeholder=\"Enter a place\">\n    <input type=\"text\" ref=\"addRef\" @input=\"$emit('update:add', $event.target.value)\" :value=\"add\" placeholder=\"Enter a place\">\n</template>\n\n\n\n<script>\n\n/* eslint-disable */\n\nimport { ref, onMounted } from 'vue';\n\n\nexport default {\n    props:{\n        add:{\n            type: String,\n            default: ''\n        },\n        latLng:{\n            type: String,\n            default: ''\n        }\n    },\n    setup(){\n        const addRef = ref();\n        const latLngRef = ref();\n\n        const options = {\n            fields: [\"formatted_address\", \"geometry\"],\n            strictBounds: false,\n            types: [\"establishment\"],\n        };\n\n        onMounted(() => {\n\n            const autocomplete = new google.maps.places.Autocomplete(addRef.value, options);\n            autocomplete.addListener(\"place_changed\", () => {\n                const place = autocomplete.getPlace();\n                    console.log(place);\n                if (!place.geometry || !place.geometry.location) {\n                    return;\n                }\n                const lat = place.geometry.location.lat();\n                const lng = place.geometry.location.lng();\n                const latLng = `${lat}, ${lng}`;\n                const add = place.formatted_address;\n                // this.$emit('update:latLng', latLng);\n                // this.$emit('update:add', add);\n            });\n\n\n            // const add = new google.maps.places.Autocomplete(addRef.value, {\n            //     types: ['address'],\n            //     fields: ['address_components']\n            // });\n\n            // const autoCompleteLatLng = new google.maps.places.Autocomplete(latLngRef.value, {\n            //     types: ['geometry'],\n            //     fields: ['address_components']\n            // });\n        })\n        return { addRef, latLngRef }\n    }\n}\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}