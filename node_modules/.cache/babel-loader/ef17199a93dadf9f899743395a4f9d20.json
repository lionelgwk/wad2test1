{"ast":null,"code":"import axios from 'axios';\nimport { ref } from 'vue';\n// import PlaceAutocomplete from './PlaceAutocomplete.vue';\nimport { onMounted } from 'vue';\n\n/* eslint-disable */\nexport default {\n  setup() {\n    const showToast = ref(true);\n    const hideToast = () => {\n      showToast.value = false;\n    };\n    const addRef = ref();\n    onMounted(() => {\n      const autoComplete = new google.maps.places.Autocomplete(addRef.value, {\n        types: ['address'],\n        fields: ['address_components', 'geometry']\n      });\n      autoComplete.addListener('place_changed', () => {\n        const place = autoComplete.getPlace();\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n        document.getElementById('coords').value = `${lat}, ${lng}`;\n      });\n    });\n    return {\n      showToast,\n      hideToast,\n      addRef\n    };\n  },\n  data() {\n    return {\n      type: \"restaurant\",\n      radius: \"1\",\n      lat: 0,\n      lng: 0,\n      places: [],\n      mapDisplay: false,\n      search: \"\",\n      add: \"\",\n      coords: \"\"\n    };\n  },\n  computed: {\n    coordinates() {\n      return `${this.lat}, ${this.lng}`;\n    }\n  },\n  methods: {\n    findLocations() {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      }, error => {\n        console.log(\"Error getting location\");\n      });\n    },\n    findNearby() {\n      const URL = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${this.lat},${this.lng}&type=${this.type}&radius=${this.radius * 1000}&key=AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4`;\n      this.showToast = true;\n      axios.get(URL).then(response => {\n        this.places = response.data.results;\n        this.addLocationsToGoogleMaps();\n      }).catch(error => {\n        console.log(error.message);\n      });\n    },\n    addLocationsToGoogleMaps() {\n      var map = new google.maps.Map(this.$refs[\"map\"], {\n        zoom: 17,\n        center: new google.maps.LatLng(this.lat, this.lng),\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      });\n      this.mapDisplay = true;\n      var infowindow = new google.maps.InfoWindow();\n      this.places.forEach(place => {\n        const lat = place.geometry.location.lat;\n        const lng = place.geometry.location.lng;\n        let marker = new google.maps.Marker({\n          position: new google.maps.LatLng(lat, lng),\n          map: map\n        });\n        google.maps.event.addListener(marker, \"click\", () => {\n          infowindow.setContent(`<div class=\"ui header\">${place.name}</div>\n                        <p>${place.vicinity}</p>`);\n          infowindow.open(map, marker);\n        });\n      });\n    }\n  },\n  mounted() {\n    this.findLocations();\n  },\n  watch: {\n    coords() {\n      this.lat = this.coords.split(\",\")[0];\n      this.lng = this.coords.split(\",\")[1];\n    },\n    coordinates() {\n      this.findNearby();\n    },\n    mapDisplay() {\n      this.hideToast();\n      this.mapDisplay = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AAkEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,KAAK;AACzB;AACA,SAASC,SAAQ,QAAS,KAAK;;AAI/B;AACA,eAAe;EACXC,KAAK,GAAG;IAEJ,MAAMC,SAAQ,GAAIH,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMI,SAAQ,GAAI,MAAM;MACpBD,SAAS,CAACE,KAAI,GAAI,KAAK;IAC3B,CAAC;IAGD,MAAMC,MAAK,GAAIN,GAAG,EAAE;IAGpBC,SAAS,CAAC,MAAM;MACZ,MAAMM,YAAW,GAAI,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACL,MAAM,CAACD,KAAK,EAAE;QACnEO,KAAK,EAAE,CAAC,SAAS,CAAC;QAClBC,MAAM,EAAE,CAAC,oBAAoB,EAAE,UAAU;MAC7C,CAAC,CAAC;MAEFN,YAAY,CAACO,WAAW,CAAC,eAAe,EAAE,MAAM;QAC5C,MAAMC,KAAI,GAAIR,YAAY,CAACS,QAAQ,EAAE;QACrC,MAAMC,GAAE,GAAIF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACF,GAAG,EAAE;QACzC,MAAMG,GAAE,GAAIL,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,EAAE;QACzCC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACjB,KAAI,GAAK,GAAEY,GAAI,KAAIG,GAAI,EAAC;MAC9D,CAAC,CAAC;IAKN,CAAC;IAGD,OAAO;MAAEjB,SAAS;MAAEC,SAAS;MAAEE;IAAO,CAAC;EAC3C,CAAC;EACDiB,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE,YAAY;MAClBC,MAAM,EAAE,GAAG;MACXR,GAAG,EAAE,CAAC;MACNG,GAAG,EAAE,CAAC;MACNV,MAAM,EAAE,EAAE;MACVgB,UAAU,EAAE,KAAK;MACjBC,MAAM,EAAE,EAAE;MACVC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAW,GAAG;MACV,OAAQ,GAAE,IAAI,CAACd,GAAI,KAAI,IAAI,CAACG,GAAI,EAAC;IACrC;EACJ,CAAC;EACDY,OAAO,EAAE;IACLC,aAAa,GAAG;MACZC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAO,IAAK;QACjD,IAAI,CAACpB,GAAE,GAAIoB,QAAQ,CAACR,MAAM,CAACS,QAAQ;QACnC,IAAI,CAAClB,GAAE,GAAIiB,QAAQ,CAACR,MAAM,CAACU,SAAS;MACxC,CAAC,EAAEC,KAAI,IAAK;QACRC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC,CAAC,CAAC;IACN,CAAC;IACDC,UAAU,GAAG;MACT,MAAMC,GAAE,GAAK,yEAAwE,IAAI,CAAC3B,GAAI,IAAG,IAAI,CAACG,GAAI,SAAQ,IAAI,CAACI,IAAK,WAAU,IAAI,CAACC,MAAK,GAAI,IAAK,8CAA6C;MACtM,IAAI,CAACtB,SAAQ,GAAI,IAAI;MACrBJ,KAAK,CAAC8C,GAAG,CAACD,GAAG,EACRE,IAAI,CAACC,QAAO,IAAK;QAClB,IAAI,CAACrC,MAAK,GAAIqC,QAAQ,CAACxB,IAAI,CAACyB,OAAO;QACnC,IAAI,CAACC,wBAAwB,EAAE;MACnC,CAAC,EACIC,KAAK,CAACV,KAAI,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACW,OAAO,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC;IACDF,wBAAwB,GAAG;MACvB,IAAIG,GAAE,GAAI,IAAI5C,MAAM,CAACC,IAAI,CAAC4C,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC,KAAK,CAAC,EAAE;QAC7CC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,IAAIhD,MAAM,CAACC,IAAI,CAACgD,MAAM,CAAC,IAAI,CAACxC,GAAG,EAAE,IAAI,CAACG,GAAG,CAAC;QAClDsC,SAAS,EAAElD,MAAM,CAACC,IAAI,CAACkD,SAAS,CAACC;MACrC,CAAC,CAAC;MACF,IAAI,CAAClC,UAAS,GAAI,IAAI;MAGtB,IAAImC,UAAS,GAAI,IAAIrD,MAAM,CAACC,IAAI,CAACqD,UAAU,EAAE;MAC7C,IAAI,CAACpD,MAAM,CAACqD,OAAO,CAAChD,KAAI,IAAK;QACzB,MAAME,GAAE,GAAIF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACF,GAAG;QACvC,MAAMG,GAAE,GAAIL,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG;QACvC,IAAI4C,MAAK,GAAI,IAAIxD,MAAM,CAACC,IAAI,CAACwD,MAAM,CAAC;UAChC5B,QAAQ,EAAE,IAAI7B,MAAM,CAACC,IAAI,CAACgD,MAAM,CAACxC,GAAG,EAAEG,GAAG,CAAC;UAC1CgC,GAAG,EAAEA;QACT,CAAC,CAAC;QACF5C,MAAM,CAACC,IAAI,CAACyD,KAAK,CAACpD,WAAW,CAACkD,MAAM,EAAE,OAAO,EAAE,MAAM;UACjDH,UAAU,CAACM,UAAU,CAAE,0BAAyBpD,KAAK,CAACqD,IAAK;6BAClDrD,KAAK,CAACsD,QAAS,MAAK,CAAC;UAC9BR,UAAU,CAACS,IAAI,CAAClB,GAAG,EAAEY,MAAM,CAAC;QAChC,CAAC,CAAC;MACN,CAAC,CAAC;IAGN;EACJ,CAAC;EACDO,OAAO,GAAG;IACN,IAAI,CAACtC,aAAa,EAAE;EACxB,CAAC;EACDuC,KAAK,EAAC;IACF3C,MAAM,GAAE;MACJ,IAAI,CAACZ,GAAE,GAAI,IAAI,CAACY,MAAM,CAAC4C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpC,IAAI,CAACrD,GAAE,GAAI,IAAI,CAACS,MAAM,CAAC4C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IACD1C,WAAW,GAAG;MACV,IAAI,CAACY,UAAU,EAAE;IACrB,CAAC;IACDjB,UAAU,GAAG;MACT,IAAI,CAACtB,SAAS,EAAE;MAChB,IAAI,CAACsB,UAAS,GAAI,KAAK;IAC3B;EACJ;AACJ","names":["axios","ref","onMounted","setup","showToast","hideToast","value","addRef","autoComplete","google","maps","places","Autocomplete","types","fields","addListener","place","getPlace","lat","geometry","location","lng","document","getElementById","data","type","radius","mapDisplay","search","add","coords","computed","coordinates","methods","findLocations","navigator","geolocation","getCurrentPosition","position","latitude","longitude","error","console","log","findNearby","URL","get","then","response","results","addLocationsToGoogleMaps","catch","message","map","Map","$refs","zoom","center","LatLng","mapTypeId","MapTypeId","ROADMAP","infowindow","InfoWindow","forEach","marker","Marker","event","setContent","name","vicinity","open","mounted","watch","split"],"sourceRoot":"","sources":["C:\\Users\\Dell\\Documents\\GitHub\\wad2test1\\src\\components\\NearbyPlaces.vue"],"sourcesContent":["<template>\r\n    <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\"/>\r\n    \r\n    <transition name=\"toastmotion\">\r\n        <div class=\"toast-wrap\" v-if=\"showToast\">\r\n            <div class=\"toastnotif\">\r\n                loading...\r\n            </div>\r\n        </div>\r\n    </transition>\r\n\r\n    <div class=\"ui grid\">\r\n        <div class=\"six wide column\">\r\n            <form class=\"ui segment large form\">\r\n                <div class=\"field\">\r\n                    <div class=\"ui right icon input large\">\r\n                        <input type=\"text\" id=\"coords\" ref=\"latLngRef\" placeholder=\"Search for a place\" v-model=\"coords\" @change=\"findNearby\">\r\n                        <input type=\"text\" ref=\"addRef\" @change=\"$emit('update:add', $event.target.value)\" :value=\"add\" placeholder=\"Enter a place\">\r\n                        <i class=\"search link icon\" @click=\"findNearby\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <div class=\"two fields\">\r\n                        <div class=\"field\">\r\n                            <select v-model=\"type\">\r\n                                <option value=\"restaurant\" selected>Restaurants</option>\r\n                                <option value=\"bar\">Bars</option>\r\n                                <option value=\"activities\">Activities</option>\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"field\">\r\n                            <select v-model=\"radius\">\r\n                                <option value=\"1\" selected>1 KM</option>\r\n                                <option value=\"2\">2 KM</option>\r\n                                <option value=\"3\">3 KM</option>\r\n                                <option value=\"4\">4 KM</option>\r\n                                <option value=\"5\">5 KM</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button class=\"ui button pink\" @click=\"findNearby\">Find Locations</button>\r\n            </form>\r\n\r\n            <div class=\"ui segment\" style=\"max-height: 500px; overflow:scroll\">\r\n                <div class=\"ui divided items\">\r\n                    <div class=\"item\" v-for=\"place in places\" :key=\"place.id\">\r\n                        <div class=\"content\">\r\n                            <div class=\"header\">{{place.name}}</div>\r\n                            <div class=\"meta\">{{place.vicinity}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"ten wide column segment ui\" ref=\"map\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script> \r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\n// import PlaceAutocomplete from './PlaceAutocomplete.vue';\r\nimport { onMounted } from 'vue';\r\n\r\n\r\n\r\n/* eslint-disable */\r\nexport default {\r\n    setup() {\r\n\r\n        const showToast = ref(true);\r\n        const hideToast = () => {\r\n            showToast.value = false;\r\n        };\r\n\r\n\r\n        const addRef = ref();\r\n        \r\n\r\n        onMounted(() => {\r\n            const autoComplete = new google.maps.places.Autocomplete(addRef.value, {\r\n                types: ['address'],\r\n                fields: ['address_components', 'geometry']\r\n            });\r\n\r\n            autoComplete.addListener('place_changed', () => {\r\n                const place = autoComplete.getPlace();\r\n                const lat = place.geometry.location.lat();\r\n                const lng = place.geometry.location.lng();\r\n                document.getElementById('coords').value = `${lat}, ${lng}`;\r\n            });\r\n\r\n            \r\n\r\n\r\n        })\r\n\r\n        \r\n        return { showToast, hideToast, addRef };\r\n    },\r\n    data() {\r\n        return {\r\n            type: \"restaurant\",\r\n            radius: \"1\",\r\n            lat: 0,\r\n            lng: 0,\r\n            places: [],\r\n            mapDisplay: false,\r\n            search: \"\",\r\n            add: \"\",\r\n            coords: \"\"\r\n        };\r\n    },\r\n    computed: {\r\n        coordinates() {\r\n            return `${this.lat}, ${this.lng}`;\r\n        }\r\n    },\r\n    methods: {\r\n        findLocations() {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.lat = position.coords.latitude;\r\n                this.lng = position.coords.longitude;\r\n            }, error => {\r\n                console.log(\"Error getting location\");\r\n            });\r\n        },\r\n        findNearby() {\r\n            const URL = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${this.lat},${this.lng}&type=${this.type}&radius=${this.radius * 1000}&key=AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4`;\r\n            this.showToast = true;\r\n            axios.get(URL)\r\n                .then(response => {\r\n                this.places = response.data.results;\r\n                this.addLocationsToGoogleMaps();\r\n            })\r\n                .catch(error => {\r\n                console.log(error.message);\r\n            });\r\n        },\r\n        addLocationsToGoogleMaps() {\r\n            var map = new google.maps.Map(this.$refs[\"map\"], {\r\n                zoom: 17,\r\n                center: new google.maps.LatLng(this.lat, this.lng),\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP\r\n            });\r\n            this.mapDisplay = true;\r\n            \r\n            \r\n            var infowindow = new google.maps.InfoWindow();\r\n            this.places.forEach(place => {\r\n                const lat = place.geometry.location.lat;\r\n                const lng = place.geometry.location.lng;\r\n                let marker = new google.maps.Marker({\r\n                    position: new google.maps.LatLng(lat, lng),\r\n                    map: map\r\n                });\r\n                google.maps.event.addListener(marker, \"click\", () => {\r\n                    infowindow.setContent(`<div class=\"ui header\">${place.name}</div>\r\n                        <p>${place.vicinity}</p>`);\r\n                    infowindow.open(map, marker);\r\n                });\r\n            });\r\n\r\n            \r\n        }\r\n    },\r\n    mounted() {\r\n        this.findLocations();\r\n    },\r\n    watch:{\r\n        coords(){\r\n            this.lat = this.coords.split(\",\")[0];\r\n            this.lng = this.coords.split(\",\")[1];\r\n        },\r\n        coordinates() {\r\n            this.findNearby();\r\n        },\r\n        mapDisplay() {\r\n            this.hideToast();\r\n            this.mapDisplay = false;\r\n        } \r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .toast-wrap {\r\n        position: fixed;\r\n        width: 100%;\r\n        top: 20px;\r\n        z-index: 99999999;\r\n    }\r\n    .toastnotif {\r\n        padding: 20px;\r\n        color: white;\r\n        background: #ff0062;\r\n        border-radius: 10px;\r\n        box-shadow: 1px 3px 5px rgba(0,0,0,0.2);\r\n        max-width: 400px;\r\n        margin: 0 auto;\r\n        z-index: 99999999;\r\n    }\r\n    .toastmotion-enter-from {\r\n        opacity: 0;\r\n        transform: translateY(-60px);\r\n    }\r\n\r\n    .toastmotion-enter-to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n\r\n    .toastmotion-enter-active {\r\n        transition: all 0.3s ease;\r\n    }\r\n\r\n    .toastmotion-leave-from {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n\r\n    .toastmotion-leave-to {\r\n        opacity: 0;\r\n        transform: translateY(-60px);\r\n    }\r\n\r\n    .toastmotion-leave-active {\r\n        transition: all 0.3s ease;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}