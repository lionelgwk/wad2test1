{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"registeraccount\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Sign In\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]])]), _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), $setup.errMsg ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($setup.errMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_createElementVNode(\"button\", {\n    onClick: $setup.signIn\n  }, \"Submit\")]), _createElementVNode(\"p\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.signInWithGoogle && _ctx.signInWithGoogle(...args))\n  }, \"Sign In With Google\")])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAiB;gCACxBC,oBAAgB,YAAZ,SAAO;;;;;uBADfC,oBAOM,OAPNC,UAOM,GANFC,UAAgB,EAChBH,oBAA+D,4BAA5DA,oBAAwD;IAAjDI,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,OAAO;+DAAUC,YAAK;iDAALA,YAAK,OACxDN,oBAAyE,4BAAtEA,oBAAkE;IAA3DI,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;+DAAUC,eAAQ;iDAARA,eAAQ,OACzDA,aAAM,kBAAfL,oBAAiC,kCAAbK,aAAM,uDAC1BN,oBAA8C,YAA3CA,oBAAuC;IAA9BO,OAAK,EAAED;EAAM,GAAE,QAAM,KACjCN,oBAAqE,YAAlEA,oBAA8D;IAArDO,OAAK,yCAAEC,uDAAgB;KAAE,qBAAmB","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","placeholder","$setup","onClick","_ctx"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/views/SignIn.vue"],"sourcesContent":["<template>\n    <div class=\"registeraccount\">\n        <h1>Sign In</h1>\n        <p><input type=\"text\" placeholder=\"Email\" v-model=\"email\"/></p>\n        <p><input type=\"password\" placeholder=\"Password\" v-model=\"password\"/></p>\n        <p v-if=\"errMsg\">{{ errMsg }}</p>\n        <p><button @click=\"signIn\">Submit</button></p>\n        <p><button @click=\"signInWithGoogle\">Sign In With Google</button></p>\n    </div>\n  </template>\n  \n  <script setup>\n  // @ is an alias to /src\n    /* eslint-disable */\n    import { ref } from \"vue\";\n    import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n    import router from '@/router'\n    const email = ref(\"\");\n    const password = ref(\"\");\n    const errMsg = ref() //error message\n\n    function signIn() {\n        signInWithEmailAndPassword(getAuth(), email.value, password.value)\n            .then((data) => {\n                console.log(\"Successfully signed in!\");\n                router.push('/myevents');\n            })\n            .catch((error) => {\n                console.log(error.code);\n                switch (error.code){\n                    case \"auth/invalid-email\":\n                        \n                }\n            });\n    }\n\n//   const signInWithGoogle = () => {\n    \n// }\n  \n//   export default {\n//     name: 'RegisterAccount',\n//     components: {\n//   }\n//   }\n  </script>"]},"metadata":{},"sourceType":"module"}