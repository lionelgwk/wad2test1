{"ast":null,"code":"export default {\n  setup() {\n    const input = ref(null);\n    const autocomplete = ref(null);\n    const place = ref(null);\n    const ready = ref(false);\n    const geolocation = ref(false);\n    const manually = ref(false);\n    const zoom = ref(15);\n    const address = ref(null);\n    const fallbackProcedure = ref(null);\n    const getMapData = data => {\n      place.value = data;\n    };\n    onMounted(() => {\n      autocomplete.value = new google.maps.places.Autocomplete(input.value);\n      google.maps.event.addListener(autocomplete.value, 'place_changed', () => {\n        place.value = autocomplete.value.getPlace();\n      });\n      ready.value = true;\n    });\n    return {\n      input,\n      autocomplete,\n      place,\n      ready,\n      geolocation,\n      manually,\n      zoom,\n      address,\n      fallbackProcedure,\n      getMapData\n    };\n  }\n};","map":{"version":3,"mappings":"AAKI,eAAe;EACXA,KAAK,GAAE;IACH,MAAMC,KAAI,GAAIC,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMC,YAAW,GAAID,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAME,KAAI,GAAIF,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMG,KAAI,GAAIH,GAAG,CAAC,KAAK,CAAC;IACxB,MAAMI,WAAU,GAAIJ,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMK,QAAO,GAAIL,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMM,IAAG,GAAIN,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMO,OAAM,GAAIP,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMQ,iBAAgB,GAAIR,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMS,UAAS,GAAKC,IAAI,IAAK;MACzBR,KAAK,CAACS,KAAI,GAAID,IAAI;IACtB,CAAC;IACDE,SAAS,CAAC,MAAM;MACZX,YAAY,CAACU,KAAI,GAAI,IAAIE,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACY,KAAK,CAAC;MACrEE,MAAM,CAACC,IAAI,CAACG,KAAK,CAACC,WAAW,CAACjB,YAAY,CAACU,KAAK,EAAE,eAAe,EAAE,MAAM;QACrET,KAAK,CAACS,KAAI,GAAIV,YAAY,CAACU,KAAK,CAACQ,QAAQ,EAAE;MAC/C,CAAC,CAAC;MACFhB,KAAK,CAACQ,KAAI,GAAI,IAAI;IACtB,CAAC,CAAC;IACF,OAAO;MACHZ,KAAK;MACLE,YAAY;MACZC,KAAK;MACLC,KAAK;MACLC,WAAW;MACXC,QAAQ;MACRC,IAAI;MACJC,OAAO;MACPC,iBAAiB;MACjBC;IACJ;EACJ;AACJ","names":["setup","input","ref","autocomplete","place","ready","geolocation","manually","zoom","address","fallbackProcedure","getMapData","data","value","onMounted","google","maps","places","Autocomplete","event","addListener","getPlace"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/components/PlaceAutocomplete.vue"],"sourcesContent":["<template>\n    <input type=\"text\" placeholder=\"Enter a place\">\n</template>\n\n<script>\n    export default {\n        setup(){\n            const input = ref(null);\n            const autocomplete = ref(null);\n            const place = ref(null);\n            const ready = ref(false);\n            const geolocation = ref(false);\n            const manually = ref(false);\n            const zoom = ref(15);\n            const address = ref(null);\n            const fallbackProcedure = ref(null);\n            const getMapData = (data) => {\n                place.value = data;\n            };\n            onMounted(() => {\n                autocomplete.value = new google.maps.places.Autocomplete(input.value);\n                google.maps.event.addListener(autocomplete.value, 'place_changed', () => {\n                    place.value = autocomplete.value.getPlace();\n                });\n                ready.value = true;\n            });\n            return {\n                input,\n                autocomplete,\n                place,\n                ready,\n                geolocation,\n                manually,\n                zoom,\n                address,\n                fallbackProcedure,\n                getMapData\n            }\n        }\n    }\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}