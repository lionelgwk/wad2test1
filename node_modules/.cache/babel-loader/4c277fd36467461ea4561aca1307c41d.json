{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onChange\"];\nconst _hoisted_2 = {\n  class: \"ui grid\"\n};\nconst _hoisted_3 = {\n  class: \"six wide column\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Activities\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"ui segment\",\n  style: {\n    \"max-height\": \"500px\",\n    \"overflow\": \"scroll\"\n  }\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"ui divided items\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"item\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"content\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Get\")])])], -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_7];\nconst _hoisted_9 = {\n  key: 1,\n  class: \"ui divided items\"\n};\nconst _hoisted_10 = {\n  class: \"content\"\n};\nconst _hoisted_11 = {\n  class: \"header\"\n};\nconst _hoisted_12 = {\n  class: \"meta\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"select\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.friends, friend => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: friend,\n      onChange: $event => $options.addFriend(friend)\n    }, _toDisplayString(friend.name), 41 /* TEXT, PROPS, HYDRATE_EVENTS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [$data.friends.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_8)) : _createCommentVNode(\"v-if\", true), _ctx.activities.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.activities, place => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"item\",\n      key: place.id\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString(place.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, _toDisplayString(place.vicinity), 1 /* TEXT */), _createCommentVNode(\" <button class=\\\"ui button blue\\\" @click=\\\"addPlace(place)\\\">Add Activity</button> \")])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAOSA,KAAK,EAAC;AAAS;;EACXA,KAAK,EAAC;AAAiB;gCACxBC,oBAAmB,YAAf,YAAU;;EACTD,KAAK,EAAC,YAAY;EAACE,KAA0C,EAA1C;IAAA;IAAA;EAAA;;;;EACfF,KAAK,EAAC;;gCACPC,oBAMM;EANDD,KAAK,EAAC;AAAM,iBACbC,oBAIM;EAJDD,KAAK,EAAC;AAAS,iBAChBC,oBAEM;EAFDD,KAAK,EAAC;AAAQ,iBACfC,oBAAU,WAAP,KAAG;oBAHlBE,UAMM;;;EAELH,KAAK,EAAC;;;EAEEA,KAAK,EAAC;AAAS;;EACXA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAM;;6DAvBzCC,oBAIS,oCAHLG,oBAESC,6BAFgBC,aAAO,EAAjBC,MAAM;yBAArBH,oBAES;MAF0BI,GAAG,EAAED,MAAM;MAAGE,QAAM,YAAEC,kBAAS,CAACH,MAAM;wBACnEA,MAAM,CAACI,IAAI;oCAIrBV,oBAwBM,OAxBNW,UAwBM,GAvBFX,oBAsBM,OAtBNY,UAsBM,GArBFC,UAAmB,EACnBb,oBAmBM,OAnBNc,UAmBM,GAlBkCT,aAAO,CAACU,MAAM,uBAAlDZ,oBAQM,OARNa,UAQM,oDAC8BC,eAAU,CAACF,MAAM,sBAArDZ,oBAQM,OARNe,UAQM,sBAPFf,oBAMMC,6BAN4Ba,eAAU,EAAnBE,KAAK;yBAA9BhB,oBAMM;MANDJ,KAAK,EAAC,MAAM;MAA8BQ,GAAG,EAAEY,KAAK,CAACC;QACtDpB,oBAIM,OAJNqB,WAIM,GAHFrB,oBAAwC,OAAxCsB,WAAwC,mBAAlBH,KAAK,CAACT,IAAI,kBAChCV,oBAA0C,OAA1CuB,WAA0C,mBAAtBJ,KAAK,CAACK,QAAQ,kBACtCC,0GAAsF","names":["class","_createElementVNode","style","_hoisted_7","_createElementBlock","_Fragment","$data","friend","key","onChange","$options","name","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","length","_hoisted_6","_ctx","_hoisted_9","place","id","_hoisted_10","_hoisted_11","_hoisted_12","vicinity","_createCommentVNode"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/components/AddFriends.vue"],"sourcesContent":["<template>\n    <select>\n        <option v-for=\"friend in friends\" :key=\"friend\" @change=\"addFriend(friend)\">\n            {{friend.name}}\n        </option>\n    </select>\n\n    <div class=\"ui grid\">\n        <div class=\"six wide column\">\n            <h1>Activities</h1>\n            <div class=\"ui segment\" style=\"max-height: 500px; overflow:scroll\">\n                <div class=\"ui divided items\" v-if=\"friends.length == 0\">\n                    <div class=\"item\">\n                        <div class=\"content\">\n                            <div class=\"header\">\n                                <p>Get</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"ui divided items\" v-if=\"activities.length > 0\">\n                    <div class=\"item\" v-for=\"place in activities\" :key=\"place.id\">\n                        <div class=\"content\">\n                            <div class=\"header\">{{place.name}}</div>\n                            <div class=\"meta\">{{place.vicinity}}</div>\n                        <!-- <button class=\"ui button blue\" @click=\"addPlace(place)\">Add Activity</button> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport db from '@/fb';\n\nexport default{\n    data(){\n        return {\n            friends: [],\n            selectedFriend: ''\n        }\n    },\n    emits: ['add-friend'],\n    methods:{\n        sortBy(prop){\n            this.friends.sort((a,b) => a[prop] < b[prop] ? -1 : 1)\n        },\n        addFriend(){\n            this.$emit('add-friend', this.selectedFriend)\n        }\n    },\n    mounted(){\n        db.collection('users').onSnapshot(res => {\n            const changes = res.docChanges();\n            changes.forEach(change => {\n                if (change.type === 'added'){\n                    this.friends.push({\n                        ...change.doc.data(),\n                        id: change.doc.id\n                    })\n                }\n            })\n        })\n        console.log(this.friends)\n    }\n}\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}