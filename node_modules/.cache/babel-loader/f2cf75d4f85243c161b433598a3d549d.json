{"ast":null,"code":"import { onUnmounted, onMounted, ref } from \"vue\";\nexport function useGeolocation() {\n  const coords = ref({\n    latitude: 45.508,\n    longitude: -73.587\n  });\n  const isSupported = 'navigator' in window && 'geolocation' in navigator;\n  let watcher = null;\n  onMounted(() => {\n    if (isSupported) watcher = navigator.geolocation.watchPosition(position => coords.value = position.coords);\n  });\n  onUnmounted(() => {\n    if (watcher) navigator.geolocation.clearWatch(watcher);\n  });\n  return {\n    coords,\n    isSupported\n  };\n}","map":{"version":3,"names":["onUnmounted","onMounted","ref","useGeolocation","coords","latitude","longitude","isSupported","window","navigator","watcher","geolocation","watchPosition","position","value","clearWatch"],"sources":["/Applications/MAMP/htdocs/IS216/wad2test1/src/useGeolocation.js"],"sourcesContent":["import { onUnmounted, onMounted, ref } from \"vue\";\n\nexport function useGeolocation() {\n    const coords = ref({ latitude: 45.508, longitude: -73.587})\n    const isSupported = 'navigator' in window && 'geolocation' in navigator\n\n    let watcher = null\n    onMounted(() => {\n        if (isSupported)\n            watcher = navigator.geolocation.watchPosition(\n                position => (coords.value = position.coords)\n            )\n        })\n    \n    onUnmounted(() => {\n        if (watcher) navigator.geolocation.clearWatch(watcher)\n    })\n\n    return {coords, isSupported}\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAEjD,OAAO,SAASC,cAAc,GAAG;EAC7B,MAAMC,MAAM,GAAGF,GAAG,CAAC;IAAEG,QAAQ,EAAE,MAAM;IAAEC,SAAS,EAAE,CAAC;EAAM,CAAC,CAAC;EAC3D,MAAMC,WAAW,GAAG,WAAW,IAAIC,MAAM,IAAI,aAAa,IAAIC,SAAS;EAEvE,IAAIC,OAAO,GAAG,IAAI;EAClBT,SAAS,CAAC,MAAM;IACZ,IAAIM,WAAW,EACXG,OAAO,GAAGD,SAAS,CAACE,WAAW,CAACC,aAAa,CACzCC,QAAQ,IAAKT,MAAM,CAACU,KAAK,GAAGD,QAAQ,CAACT,MAAO,CAC/C;EACL,CAAC,CAAC;EAENJ,WAAW,CAAC,MAAM;IACd,IAAIU,OAAO,EAAED,SAAS,CAACE,WAAW,CAACI,UAAU,CAACL,OAAO,CAAC;EAC1D,CAAC,CAAC;EAEF,OAAO;IAACN,MAAM;IAAEG;EAAW,CAAC;AAChC"},"metadata":{},"sourceType":"module"}