{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    type: \"text\",\n    ref: \"addRef\",\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:')),\n    placeholder: \"Enter a place\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */);\n}","map":{"version":3,"mappings":";;uBACIA,oBAAsF;IAA/EC,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,QAAQ;IAAEC,OAAK,sCAAEC,UAAK;IAAaC,WAAW,EAAC","names":["_createElementBlock","type","ref","onInput","_ctx","placeholder"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/components/PlaceAutocomplete.vue"],"sourcesContent":["<template>\n    <input type=\"text\" ref=\"addRef\" @input=\"$emit('update:')\" placeholder=\"Enter a place\">\n</template>\n\n\n\n<script>\n\n/* eslint-disable */\n\nimport { ref, onMounted } from 'vue';\n\n\nexport default {\n    setup(){\n        const addRef = ref();\n\n        onMounted(() => {\n            const autoComplete = new google.maps.places.Autocomplete(addRef.value, {\n            types: ['address'],\n            fields: ['address_components']\n        });\n\n        return { addRef }\n        })\n    }\n}\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}