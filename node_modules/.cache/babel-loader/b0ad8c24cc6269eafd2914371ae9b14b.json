{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"createevent\"\n};\nconst _hoisted_2 = {\n  ref: \"mapDiv\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Position\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  ref: \"mapDiv\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"80vh\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Marker = _resolveComponent(\"Marker\");\n  const _component_GoogleMap = _resolveComponent(\"GoogleMap\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_GoogleMap, {\n    \"api-key\": \"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"500px\"\n    },\n    center: _ctx.center,\n    zoom: 15\n  }, {\n    default: _withCtx(() => [_createVNode(_component_Marker, {\n      options: {\n        position: _ctx.center\n      }\n    }, null, 8 /* PROPS */, [\"options\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"center\"])], 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"h5\", null, \"Latitude: \" + _toDisplayString($setup.currPos.lat.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"h5\", null, \"Longitude: \" + _toDisplayString($setup.currPos.lng.toFixed(2)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAa;;EACjBC,GAAG,EAAC;AAAQ;gCAQjBC,oBAAiB,YAAb,UAAQ;;EAITD,GAAG,EAAC,QAAQ;EAACE,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;;;6DAblBD,oBAMM,OANNE,UAMM,GALJF,oBAIM,OAJNG,UAIM,GAHJC,aAEYC;IAFD,SAAO,EAAC,yCAAyC;IAACJ,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IAAEK,MAAM,EAAEC,WAAM;IAAGC,IAAI,EAAE;;sBAClH,MAA0C,CAA1CJ,aAA0CK;MAAjCC,OAAO;QAAAC,UAAcJ;MAAM;;;2DAK9CP,oBAIM,cAHJY,UAAiB,EACjBZ,oBAA6C,YAAzC,YAAU,oBAAEa,cAAO,CAACC,GAAG,CAACC,OAAO,qBACnCf,oBAA8C,YAA1C,aAAW,oBAAEa,cAAO,CAACG,GAAG,CAACD,OAAO,uBAEtCf,oBAAqD,OAArDiB,UAAqD","names":["class","ref","_createElementVNode","style","_hoisted_1","_hoisted_2","_createVNode","_component_GoogleMap","center","_ctx","zoom","_component_Marker","options","position","_hoisted_3","$setup","lat","toFixed","lng","_hoisted_4"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/views/CreateEvent.vue"],"sourcesContent":["<template>\n    <div class=\"createevent\">\n      <div ref=\"mapDiv\">\n        <GoogleMap api-key=\"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\" style=\"width: 100%; height: 500px\" :center=\"center\" :zoom=\"15\">\n              <Marker :options=\"{ position: center }\" />\n        </GoogleMap>\n      </div>\n    </div>\n\n    <div>\n      <h4>Position</h4>\n      <h5>Latitude: {{currPos.lat.toFixed(2)}}</h5>\n      <h5>Longitude: {{currPos.lng.toFixed(2)}}</h5>\n    </div>\n    <div ref=\"mapDiv\" style=\"width: 100%; height: 80vh\"/>\n  </template>\n  \n<script>\n  // @ is an alias to /src\n\n  /* eslint-disable */\n  import { onMounted, ref } from \"vue\";\n  import { computed } from 'vue'\n  import { useGeolocation } from '../useGeolocation'\n  import { Loader } from '@googlemaps/js-api-loader'\n  import { GoogleMap, Marker } from \"vue3-google-map\";\n  import { watch } from 'vue'\n\n  const GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4'\n\n  export default ({\n    name: 'CreateEvent',\n    components: {GoogleMap, Marker},\n    setup(){\n\n      const {coords} = useGeolocation()\n\n      \n\n      const currPos = computed (() => ({\n        lat: coords.value.latitude,\n        lng: coords.value.longitude\n      }))\n      \n\n      \n\n\n\n      const loader = new Loader ({apiKey: GOOGLE_MAPS_API_KEY})\n      const mapDiv = ref(null)\n      let map = ref(null)\n\n      \n      onMounted(async () => {\n        await loader.load()\n        map = new google.maps.Map(mapDiv.value, {\n          center: currPos.value,\n          zoom: 15\n        })\n      }),\n\n      watch(currPos, () => {\n        map.setCenter(currPos.value)\n      })\n\n\n\n\n\n      return {currPos, mapDiv}\n    }\n  });\n  \n\n</script>\n  "]},"metadata":{},"sourceType":"module"}