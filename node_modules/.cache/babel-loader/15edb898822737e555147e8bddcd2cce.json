{"ast":null,"code":"import axios from 'axios';\nimport { ref } from 'vue';\n// import PlaceAutocomplete from './PlaceAutocomplete.vue';\n// import { onMounted } from 'vue';\n\n/* eslint-disable */\nexport default {\n  data() {\n    return {\n      type: \"restaurant\",\n      radius: \"1\",\n      lat: 0,\n      lng: 0,\n      places: [],\n      mapDisplay: false,\n      search: \"\",\n      add: \"\"\n    };\n  },\n  computed: {\n    coordinates() {\n      return `${this.lat}, ${this.lng}`;\n    }\n  },\n  methods: {\n    findLocations() {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      }, error => {\n        console.log(\"Error getting location\");\n      });\n    },\n    findNearby() {\n      const URL = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${this.lat},${this.lng}&type=${this.type}&radius=${this.radius * 1000}&key=AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4`;\n      this.showToast = true;\n      axios.get(URL).then(response => {\n        this.places = response.data.results;\n        this.addLocationsToGoogleMaps();\n      }).catch(error => {\n        console.log(error.message);\n      });\n    },\n    addLocationsToGoogleMaps() {\n      var map = new google.maps.Map(this.$refs[\"map\"], {\n        zoom: 17,\n        center: new google.maps.LatLng(this.lat, this.lng),\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      });\n      this.mapDisplay = true;\n      var infowindow = new google.maps.InfoWindow();\n      this.places.forEach(place => {\n        const lat = place.geometry.location.lat;\n        const lng = place.geometry.location.lng;\n        let marker = new google.maps.Marker({\n          position: new google.maps.LatLng(lat, lng),\n          map: map\n        });\n        google.maps.event.addListener(marker, \"click\", () => {\n          infowindow.setContent(`<div class=\"ui header\">${place.name}</div>\n                        <p>${place.vicinity}</p>`);\n          infowindow.open(map, marker);\n        });\n      });\n    }\n  },\n  mounted() {\n    this.findLocations();\n  },\n  watch: {\n    coordinates() {\n      this.findNearby();\n    },\n    mapDisplay() {\n      this.hideToast();\n      this.mapDisplay = false;\n    }\n  },\n  mounted() {\n    const showToast = ref(true);\n    const hideToast = () => {\n      showToast.value = false;\n    };\n    const addRef = ref();\n    const autoComplete = new google.maps.places.Autocomplete(addRef.value, {\n      types: ['address'],\n      fields: ['address_components', 'geometry']\n    });\n    autoComplete.addListener('place_changed', () => {\n      const place = autoComplete.getPlace();\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n      this.lat = lat;\n      console.log(lng);\n    });\n    return {\n      showToast,\n      hideToast,\n      addRef\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","ref","data","type","radius","lat","lng","places","mapDisplay","search","add","computed","coordinates","methods","findLocations","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","log","findNearby","URL","showToast","get","then","response","results","addLocationsToGoogleMaps","catch","message","map","google","maps","Map","$refs","zoom","center","LatLng","mapTypeId","MapTypeId","ROADMAP","infowindow","InfoWindow","forEach","place","geometry","location","marker","Marker","event","addListener","setContent","name","vicinity","open","mounted","watch","hideToast","value","addRef","autoComplete","Autocomplete","types","fields","getPlace"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/components/NearbyPlaces.vue"],"sourcesContent":["<template>\n    <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\"/>\n    \n    <transition name=\"toastmotion\">\n        <div class=\"toast-wrap\" v-if=\"showToast\">\n            <div class=\"toastnotif\">\n                loading...\n            </div>\n        </div>\n    </transition>\n\n    <div class=\"ui grid\">\n        <div class=\"six wide column\">\n            <form class=\"ui segment large form\">\n                <div class=\"field\">\n                    <div class=\"ui right icon input large\">\n                        <input type=\"text\" id=\"coords\" ref=\"latLngRef\" placeholder=\"Search for a place\">\n                        <input type=\"text\" ref=\"addRef\" @change=\"$emit('update:add', $event.target.value)\" :value=\"add\" placeholder=\"Enter a place\">\n                        <i class=\"search link icon\" @click=\"findLocations\"></i>\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <div class=\"two fields\">\n                        <div class=\"field\">\n                            <select v-model=\"type\">\n                                <option value=\"restaurant\" selected>Restaurants</option>\n                                <option value=\"bar\">Bars</option>\n                                <option value=\"activities\">Activities</option>\n                            </select>\n                        </div>\n\n\n                        <div class=\"field\">\n                            <select v-model=\"radius\">\n                                <option value=\"1\" selected>1 KM</option>\n                                <option value=\"2\">2 KM</option>\n                                <option value=\"3\">3 KM</option>\n                                <option value=\"4\">4 KM</option>\n                                <option value=\"5\">5 KM</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n\n                <button class=\"ui button pink\" @click=\"findNearby\">Find Locations</button>\n            </form>\n\n            <div class=\"ui segment\" style=\"max-height: 500px; overflow:scroll\">\n                <div class=\"ui divided items\">\n                    <div class=\"item\" v-for=\"place in places\" :key=\"place.id\">\n                        <div class=\"content\">\n                            <div class=\"header\">{{place.name}}</div>\n                            <div class=\"meta\">{{place.vicinity}}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n        <div class=\"ten wide column segment ui\" ref=\"map\">\n        </div>\n    </div>\n</template>\n\n<script> \nimport axios from 'axios';\nimport { ref } from 'vue';\n// import PlaceAutocomplete from './PlaceAutocomplete.vue';\n// import { onMounted } from 'vue';\n\n\n\n/* eslint-disable */\nexport default {\n    data() {\n        return {\n            type: \"restaurant\",\n            radius: \"1\",\n            lat: 0,\n            lng: 0,\n            places: [],\n            mapDisplay: false,\n            search: \"\",\n            add: \"\",\n        };\n    },\n    computed: {\n        coordinates() {\n            return `${this.lat}, ${this.lng}`;\n        }\n    },\n    methods: {\n        findLocations() {\n            navigator.geolocation.getCurrentPosition(position => {\n                this.lat = position.coords.latitude;\n                this.lng = position.coords.longitude;\n            }, error => {\n                console.log(\"Error getting location\");\n            });\n        },\n        findNearby() {\n            const URL = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${this.lat},${this.lng}&type=${this.type}&radius=${this.radius * 1000}&key=AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4`;\n            this.showToast = true;\n            axios.get(URL)\n                .then(response => {\n                this.places = response.data.results;\n                this.addLocationsToGoogleMaps();\n            })\n                .catch(error => {\n                console.log(error.message);\n            });\n        },\n        addLocationsToGoogleMaps() {\n            var map = new google.maps.Map(this.$refs[\"map\"], {\n                zoom: 17,\n                center: new google.maps.LatLng(this.lat, this.lng),\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            });\n            this.mapDisplay = true;\n            var infowindow = new google.maps.InfoWindow();\n            this.places.forEach(place => {\n                const lat = place.geometry.location.lat;\n                const lng = place.geometry.location.lng;\n                let marker = new google.maps.Marker({\n                    position: new google.maps.LatLng(lat, lng),\n                    map: map\n                });\n                google.maps.event.addListener(marker, \"click\", () => {\n                    infowindow.setContent(`<div class=\"ui header\">${place.name}</div>\n                        <p>${place.vicinity}</p>`);\n                    infowindow.open(map, marker);\n                });\n            });\n        }\n    },\n    mounted() {\n        this.findLocations();\n    },\n    watch: {\n        coordinates() {\n            this.findNearby();\n        },\n        mapDisplay() {\n            this.hideToast();\n            this.mapDisplay = false;\n        }\n    },\n    mounted(){\n        const showToast = ref(true);\n        const hideToast = () => {\n            showToast.value = false;\n        };\n        const addRef = ref();\n        const autoComplete = new google.maps.places.Autocomplete(addRef.value, {\n                types: ['address'],\n                fields: ['address_components', 'geometry']\n            });\n\n            autoComplete.addListener('place_changed', () => {\n                const place = autoComplete.getPlace();\n                const lat = place.geometry.location.lat();\n                const lng = place.geometry.location.lng();\n                this.lat = lat;\n                console.log(lng);\n            });\n\n        return { showToast, hideToast, addRef };\n        \n    }\n}\n</script>\n\n<style scoped>\n  .toast-wrap {\n        position: fixed;\n        width: 100%;\n        top: 20px;\n        z-index: 99999999;\n    }\n    .toastnotif {\n        padding: 20px;\n        color: white;\n        background: #ff0062;\n        border-radius: 10px;\n        box-shadow: 1px 3px 5px rgba(0,0,0,0.2);\n        max-width: 400px;\n        margin: 0 auto;\n        z-index: 99999999;\n    }\n    .toastmotion-enter-from {\n        opacity: 0;\n        transform: translateY(-60px);\n    }\n\n    .toastmotion-enter-to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n\n    .toastmotion-enter-active {\n        transition: all 0.3s ease;\n    }\n\n    .toastmotion-leave-from {\n        opacity: 1;\n        transform: translateY(0);\n    }\n\n    .toastmotion-leave-to {\n        opacity: 0;\n        transform: translateY(-60px);\n    }\n\n    .toastmotion-leave-active {\n        transition: all 0.3s ease;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}