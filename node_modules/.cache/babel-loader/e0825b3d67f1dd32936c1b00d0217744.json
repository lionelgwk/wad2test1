{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"select\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.friends, friend => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: friend\n    }, _toDisplayString(friend.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAES,oCADLA,oBAAwEC,6BAA/CC,aAAO,EAAjBC,MAAM;yBAArBH,oBAAwE;MAArCI,GAAG,EAAED;IAAM,oBAAIA,MAAM,CAACE,IAAI","names":["_createElementBlock","_Fragment","$data","friend","key","name"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/components/AddFriends.vue"],"sourcesContent":["<template>\n    <select>\n        <option v-for=\"friend in friends\" :key=\"friend\">{{friend.name}}</option>\n    </select>\n</template>\n\n<script>\nimport db from '@/fb';\n\nexport default{\n    data(){\n        return {\n            friends: []\n        }\n    },\n    methods:{\n        sortBy(prop){\n            this.friends.sort((a,b) => a[prop] < b[prop] ? -1 : 1)\n        }\n    },\n    mounted(){\n        db.collection('users').onSnapshot(res => {\n            const changes = res.docChanges();\n            changes.forEach(change => {\n                if (change.type === 'added'){\n                    this.friends.push({\n                        ...change.doc.data(),\n                        id: change.doc.id\n                    })\n                }\n            })\n        })\n        console.log(this.friends)\n    }\n}\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}