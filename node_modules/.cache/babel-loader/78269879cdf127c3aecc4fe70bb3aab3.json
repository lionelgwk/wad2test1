{"ast":null,"code":"// @ is an alias to /src\n/* eslint-disable no-undef */\nimport { onMounted, ref } from \"vue\";\nimport { computed } from 'vue';\nimport { useGeolocation } from '../useGeolocation';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { GoogleMap, Marker } from \"vue3-google-map\";\nimport { watch } from 'vue';\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4';\nexport default {\n  name: 'CreateEvent',\n  components: {\n    GoogleMap,\n    Marker\n  },\n  setup() {\n    this.useGeolocation().then(position => {\n      console.log(position.coords.latitude, position.coords.longitude);\n    });\n    const {\n      coords\n    } = useGeolocation();\n    const currPos = computed(() => ({\n      lat: coords.value.latitude,\n      lng: coords.value.longitude\n    }));\n    // const otherPos = ref(null)\n\n    const loader = new Loader({\n      apiKey: GOOGLE_MAPS_API_KEY\n    });\n    const mapDiv = ref(null);\n    let map = ref(null);\n    onMounted(async () => {\n      await loader.load();\n      map = new google.maps.Map(mapDiv.value, {\n        center: currPos.value,\n        zoom: 15\n      });\n    });\n    return {\n      currPos,\n      mapDiv\n    };\n  }\n};","map":{"version":3,"mappings":"AAkBE;AACA;AACA,SAASA,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,KAAI;AAC7B,SAASC,cAAa,QAAS,mBAAkB;AACjD,SAASC,MAAK,QAAS,2BAA0B;AACjD,SAASC,SAAS,EAAEC,MAAK,QAAS,iBAAiB;AACnD,SAASC,KAAI,QAAS,KAAI;AAE1B,MAAMC,mBAAkB,GAAI,yCAAwC;AAEpE,eAAgB;EACdC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAACL,SAAS;IAAEC;EAAM,CAAC;EAC/BK,KAAK,GAAE;IACL,IAAI,CAACR,cAAc,EAAE,CAACS,IAAI,CAAEC,QAAQ,IAAK;MACvCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,MAAM,CAACC,QAAQ,EAAEJ,QAAQ,CAACG,MAAM,CAACE,SAAS,CAAC;IAClE,CAAC,CAAC;IAEF,MAAM;MAACF;IAAM,IAAIb,cAAc,EAAC;IAIhC,MAAMgB,OAAM,GAAIjB,QAAO,CAAG,OAAO;MAC/BkB,GAAG,EAAEJ,MAAM,CAACK,KAAK,CAACJ,QAAQ;MAC1BK,GAAG,EAAEN,MAAM,CAACK,KAAK,CAACH;IACpB,CAAC,CAAC;IACF;;IAKA,MAAMK,MAAK,GAAI,IAAInB,MAAK,CAAG;MAACoB,MAAM,EAAEhB;IAAmB,CAAC;IACxD,MAAMiB,MAAK,GAAIxB,GAAG,CAAC,IAAI;IACvB,IAAIyB,GAAE,GAAIzB,GAAG,CAAC,IAAI;IAGlBD,SAAS,CAAC,YAAY;MACpB,MAAMuB,MAAM,CAACI,IAAI,EAAC;MAClBD,GAAE,GAAI,IAAIE,MAAM,CAACC,IAAI,CAACC,GAAG,CAACL,MAAM,CAACJ,KAAK,EAAE;QACtCU,MAAM,EAAEZ,OAAO,CAACE,KAAK;QACrBW,IAAI,EAAE;MACR,CAAC;IAEH,CAAC;IAMD,OAAO;MAACb,OAAO;MAAEM;IAAM;EACzB;AACF,CAAC","names":["onMounted","ref","computed","useGeolocation","Loader","GoogleMap","Marker","watch","GOOGLE_MAPS_API_KEY","name","components","setup","then","position","console","log","coords","latitude","longitude","currPos","lat","value","lng","loader","apiKey","mapDiv","map","load","google","maps","Map","center","zoom"],"sourceRoot":"","sources":["/Users/lionel/Documents/GitHub/wad2test1/src/views/CreateEvent.vue"],"sourcesContent":["<template>\n    <!-- <div class=\"createevent\">\n      <div ref=\"mapDiv\">\n        <GoogleMap api-key=\"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\" style=\"width: 100%; height: 500px\" :center=\"center\" :zoom=\"15\">\n              <Marker :options=\"{ position: center }\" />\n        </GoogleMap>\n      </div>\n    </div> -->\n\n    <div>\n      <h4>Position</h4>\n      <h5>Latitude: {{currPos.lat.toFixed(2)}}</h5>\n      <h5>Longitude: {{currPos.lng.toFixed(2)}}</h5>\n    </div>\n    <div ref=\"mapDiv\" style=\"width: 100%; height: 80vh\"/>\n  </template>\n  \n<script>\n  // @ is an alias to /src\n  /* eslint-disable no-undef */\n  import { onMounted, ref } from \"vue\";\n  import { computed } from 'vue'\n  import { useGeolocation } from '../useGeolocation'\n  import { Loader } from '@googlemaps/js-api-loader'\n  import { GoogleMap, Marker } from \"vue3-google-map\";\n  import { watch } from 'vue'\n\n  const GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4'\n\n  export default ({\n    name: 'CreateEvent',\n    components: {GoogleMap, Marker},\n    setup(){\n      this.useGeolocation().then((position) => {\n        console.log(position.coords.latitude, position.coords.longitude);\n      });\n      \n      const {coords} = useGeolocation()\n\n      \n\n      const currPos = computed (() => ({\n        lat: coords.value.latitude,\n        lng: coords.value.longitude\n      }))\n      // const otherPos = ref(null)\n      \n\n\n\n      const loader = new Loader ({apiKey: GOOGLE_MAPS_API_KEY})\n      const mapDiv = ref(null)\n      let map = ref(null)\n\n      \n      onMounted(async () => {\n        await loader.load()\n        map = new google.maps.Map(mapDiv.value, {\n          center: currPos.value,\n          zoom: 15\n        })\n        \n      })\n\n\n\n\n\n      return {currPos, mapDiv}\n    }\n  });\n  \n\n</script>\n  "]},"metadata":{},"sourceType":"module"}