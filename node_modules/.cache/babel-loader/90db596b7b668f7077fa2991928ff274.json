{"ast":null,"code":"// @ is an alias to /src\n\n/* eslint-disable */\nimport { onMounted, ref } from \"vue\";\nimport { computed } from 'vue';\nimport { useGeolocation } from '../useGeolocation';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { GoogleMap, Marker } from \"vue3-google-map\";\nimport { watch } from 'vue';\nimport GMap from \"@/components/GMap.vue\";\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4';\nexport default {\n  name: 'CreateEvent',\n  components: {\n    GoogleMap,\n    Marker,\n    GMap\n  },\n  setup() {\n    let geoCoderService = null;\n    const markers = ref([{\n      lat: 38.8977859,\n      lng: -77.0057621,\n      title: 'Union Station'\n    }, {\n      lat: 38.8976763,\n      lng: -77.0365298,\n      title: 'White House'\n    }]);\n    const findLocation = () => {};\n    const handleMapDidLoad = () => {\n      console.log(\"handleMapDidLoad\");\n      console.log(\"map\", map);\n      console.log(\"GService\", GServices);\n      geoCoderService = new GServices.Geocoder();\n    };\n    const {\n      coords\n    } = useGeolocation();\n    const currPos = computed(() => ({\n      lat: coords.value.latitude,\n      lng: coords.value.longitude\n    }));\n    const loader = new Loader({\n      apiKey: GOOGLE_MAPS_API_KEY\n    });\n    const mapDiv = ref(null);\n    let map = ref(null);\n    onMounted(async () => {\n      await loader.load();\n      map = new google.maps.Map(mapDiv.value, {\n        center: currPos.value,\n        zoom: 15\n      });\n    }), watch(currPos, () => {\n      map.setCenter(currPos.value);\n    });\n    const addLocation = () => {\n      //add location to markers array \n      markers.value = [markers.value, {\n        lat: 38.8730102,\n        lng: -77.074319,\n        title: \"Nationals Park\"\n      }];\n      console.log(markers);\n    };\n    return {\n      currPos,\n      mapDiv,\n      handleMapDidLoad,\n      markers,\n      addLocation,\n      findLocation\n    };\n  }\n};","map":{"version":3,"mappings":"AAuBE;;AAEA;AACA,SAASA,SAAS,EAAEC,GAAE,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,KAAI;AAC7B,SAASC,cAAa,QAAS,mBAAkB;AACjD,SAASC,MAAK,QAAS,2BAA0B;AACjD,SAASC,SAAS,EAAEC,MAAK,QAAS,iBAAiB;AACnD,SAASC,KAAI,QAAS,KAAK;AAC3B,OAAOC,IAAG,MAAO,uBAAsB;AAEvC,MAAMC,mBAAkB,GAAI,yCAAwC;AAEpE,eAAgB;EACdC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAACN,SAAS;IAAEC,MAAM;IAAEE;EAAI,CAAC;EACrCI,KAAK,GAAE;IAEL,IAAIC,eAAc,GAAI,IAAI;IAE1B,MAAMC,OAAM,GAAIb,GAAE,CAAG,CACnB;MACEc,GAAG,EAAC,UAAU;MACdC,GAAG,EAAC,CAAC,UAAU;MACfC,KAAK,EAAE;IAAe,CAAC,EACzB;MACEF,GAAG,EAAC,UAAU;MACdC,GAAG,EAAC,CAAC,UAAU;MACfC,KAAK,EAAE;IAAa,EACvB,CAAC;IAEF,MAAMC,YAAW,GAAI,MAAM,CAE3B;IAEA,MAAMC,gBAAe,GAAI,MAAM;MAC7BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BD,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,GAAG,CAAC;MACvBF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,SAAS,CAAC;MAClCV,eAAc,GAAI,IAAIU,SAAS,CAACC,QAAQ,EAAE;IAC5C;IAEA,MAAM;MAACC;IAAM,IAAItB,cAAc,EAAC;IAIhC,MAAMuB,OAAM,GAAIxB,QAAO,CAAG,OAAO;MAC/Ba,GAAG,EAAEU,MAAM,CAACE,KAAK,CAACC,QAAQ;MAC1BZ,GAAG,EAAES,MAAM,CAACE,KAAK,CAACE;IACpB,CAAC,CAAC;IAEF,MAAMC,MAAK,GAAI,IAAI1B,MAAK,CAAG;MAAC2B,MAAM,EAAEtB;IAAmB,CAAC;IACxD,MAAMuB,MAAK,GAAI/B,GAAG,CAAC,IAAI;IACvB,IAAIqB,GAAE,GAAIrB,GAAG,CAAC,IAAI;IAGlBD,SAAS,CAAC,YAAY;MACpB,MAAM8B,MAAM,CAACG,IAAI,EAAC;MAClBX,GAAE,GAAI,IAAIY,MAAM,CAACC,IAAI,CAACC,GAAG,CAACJ,MAAM,CAACL,KAAK,EAAE;QACtCU,MAAM,EAAEX,OAAO,CAACC,KAAK;QACrBW,IAAI,EAAE;MACR,CAAC;IAEH,CAAC,CAAC,EAEF/B,KAAK,CAACmB,OAAO,EAAE,MAAM;MACnBJ,GAAG,CAACiB,SAAS,CAACb,OAAO,CAACC,KAAK;IAC7B,CAAC,CAAC;IAEF,MAAMa,WAAU,GAAI,MAAM;MACxB;MACA1B,OAAO,CAACa,KAAI,GAAI,CAACb,OAAO,CAACa,KAAK,EAAE;QAC9BZ,GAAG,EAAE,UAAU;QAAEC,GAAG,EAAE,CAAC,SAAS;QAAEC,KAAK,EAAE;MAC3C,CAAC;MACDG,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;IACtB;IAEA,OAAO;MAACY,OAAO;MAAEM,MAAM;MAAEb,gBAAgB;MAAEL,OAAO;MAAE0B,WAAW;MAAEtB;IAAY;EAC/E;AACF,CAAC","names":["onMounted","ref","computed","useGeolocation","Loader","GoogleMap","Marker","watch","GMap","GOOGLE_MAPS_API_KEY","name","components","setup","geoCoderService","markers","lat","lng","title","findLocation","handleMapDidLoad","console","log","map","GServices","Geocoder","coords","currPos","value","latitude","longitude","loader","apiKey","mapDiv","load","google","maps","Map","center","zoom","setCenter","addLocation"],"sourceRoot":"","sources":["/Users/caitlinyap/Documents/GitHub/wad2test1/src/views/CreateEvent.vue"],"sourcesContent":["<template>\n    <!-- <div class=\"createevent\">\n      <div ref=\"mapDiv\">\n        <GoogleMap api-key=\"AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4\" style=\"width: 100%; height: 500px\" :center=\"center\" :zoom=\"15\">\n              <Marker :options=\"{ position: center }\" />\n        </GoogleMap>\n      </div>\n    </div> -->\n\n    <!-- <div>\n      <h4>Position</h4>\n      <h5>Latitude: {{currPos.lat.toFixed(2)}}</h5>\n      <h5>Longitude: {{currPos.lng.toFixed(2)}}</h5>\n    </div>\n    <div ref=\"mapDiv\" style=\"width: 100%; height: 80vh\"/> -->\n    <g-map :disableUI=\"true\" :zoom=\"15\" mapType=\"roadmap\" :center=\"{lat:38.8977859, lng:-77.0057621}\" :markers=\"markers\" :mapDidLoad=\"handleMapDidLoad\"></g-map>\n\n    <div>\n      <button onClick=\"addLocation\">Add Location</button>\n    </div>\n  </template>\n  \n<script>\n  // @ is an alias to /src\n\n  /* eslint-disable */\n  import { onMounted, ref } from \"vue\";\n  import { computed } from 'vue'\n  import { useGeolocation } from '../useGeolocation'\n  import { Loader } from '@googlemaps/js-api-loader'\n  import { GoogleMap, Marker } from \"vue3-google-map\";\n  import { watch } from 'vue';\n  import GMap from \"@/components/GMap.vue\"\n\n  const GOOGLE_MAPS_API_KEY = 'AIzaSyCTHZllCldMYoM9ByF8AcxKPWvIuFJsTx4'\n\n  export default ({\n    name: 'CreateEvent',\n    components: {GoogleMap, Marker, GMap},\n    setup(){\n\n      let geoCoderService = null;\n\n      const markers = ref ([\n        {\n          lat:38.8977859, \n          lng:-77.0057621, \n          title: 'Union Station'},\n        {\n          lat:38.8976763, \n          lng:-77.0365298, \n          title: 'White House'}\n      ]);\n\n      const findLocation = () => {\n        \n      }\n\n      const handleMapDidLoad = () => {\n        console.log(\"handleMapDidLoad\");\n        console.log(\"map\", map);\n        console.log(\"GService\", GServices);\n        geoCoderService = new GServices.Geocoder();\n      }\n\n      const {coords} = useGeolocation()\n\n      \n\n      const currPos = computed (() => ({\n        lat: coords.value.latitude,\n        lng: coords.value.longitude\n      }))\n      \n      const loader = new Loader ({apiKey: GOOGLE_MAPS_API_KEY})\n      const mapDiv = ref(null)\n      let map = ref(null)\n\n      \n      onMounted(async () => {\n        await loader.load()\n        map = new google.maps.Map(mapDiv.value, {\n          center: currPos.value,\n          zoom: 15\n        })\n        \n      }),\n\n      watch(currPos, () => {\n        map.setCenter(currPos.value)\n      });\n\n      const addLocation = () => {\n        //add location to markers array \n        markers.value = [markers.value, {\n          lat: 38.8730102, lng: -77.074319, title: \"Nationals Park\"\n        }]\n        console.log(markers);\n      }\n\n      return {currPos, mapDiv, handleMapDidLoad, markers, addLocation, findLocation}\n    }\n  });\n  \n\n</script>\n  "]},"metadata":{},"sourceType":"module"}