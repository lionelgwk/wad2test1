{"ast":null,"code":"export default {\n  __name: 'MaterialButton',\n  props: {\n    variant: {\n      type: String,\n      validator(variant) {\n        return [\"contained\", \"gradient\", \"outline\"].includes(variant);\n      },\n      default: \"contained\"\n    },\n    color: {\n      validator(color) {\n        return [\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"danger\", \"error\", \"light\", \"white\", \"dark\", \"none\"].includes(color);\n      },\n      default: \"\"\n    },\n    size: {\n      validator(size) {\n        return [\"sm\", \"md\", \"lg\"].includes(size);\n      },\n      default: \"md\"\n    },\n    fullWidth: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    /* eslint-disable */\n\n    function getClasses(variant, color, size, fullWidth, disabled) {\n      let colorValue, sizeValue, fullWidthValue, activeValue;\n\n      // Setting the button variant and color\n      if (variant === \"gradient\") {\n        colorValue = `bg-gradient-${color}`;\n      } else if (variant === \"outline\") {\n        colorValue = `btn-outline-${color}`;\n      } else {\n        colorValue = `btn-${color}`;\n      }\n      sizeValue = size && `btn-${size}`;\n      fullWidthValue = fullWidth && `w-100`;\n      activeValue = disabled && `disabled`;\n      return `${colorValue} ${sizeValue} ${fullWidthValue} ${activeValue}`;\n    }\n    const __returned__ = {\n      getClasses\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACA;;IA0CA,SAASA,UAAU,CAACC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAE;MAC7D,IAAIC,UAAU,EAAEC,SAAS,EAAEC,cAAc,EAAEC,WAAW;;MAEtD;MACA,IAAIR,OAAO,KAAK,UAAU,EAAE;QAC1BK,UAAU,GAAI,eAAcJ,KAAM,EAAC;MACrC,CAAC,MAAM,IAAID,OAAO,KAAK,SAAS,EAAE;QAChCK,UAAU,GAAI,eAAcJ,KAAM,EAAC;MACrC,CAAC,MAAM;QACLI,UAAU,GAAI,OAAMJ,KAAM,EAAC;MAC7B;MAEAK,SAAS,GAAGJ,IAAI,IAAK,OAAMA,IAAK,EAAC;MAEjCK,cAAc,GAAGJ,SAAS,IAAK,OAAM;MAErCK,WAAW,GAAGJ,QAAQ,IAAK,UAAS;MAEpC,OAAQ,GAAEC,UAAW,IAAGC,SAAU,IAAGC,cAAe,IAAGC,WAAY,EAAC;IACtE","names":["getClasses","variant","color","size","fullWidth","disabled","colorValue","sizeValue","fullWidthValue","activeValue"],"sources":["/Users/caitlinyap/Documents/GitHub/wad2test1/src/components/MaterialButton.vue"],"sourcesContent":["<script setup>\n/* eslint-disable */\ndefineProps({\n  variant: {\n    type: String,\n    validator(variant) {\n      return [\"contained\", \"gradient\", \"outline\"].includes(variant);\n    },\n    default: \"contained\",\n  },\n  color: {\n    validator(color) {\n      return [\n        \"primary\",\n        \"secondary\",\n        \"info\",\n        \"success\",\n        \"warning\",\n        \"danger\",\n        \"error\",\n        \"light\",\n        \"white\",\n        \"dark\",\n        \"none\",\n      ].includes(color);\n    },\n    default: \"\",\n  },\n  size: {\n    validator(size) {\n      return [\"sm\", \"md\", \"lg\"].includes(size);\n    },\n    default: \"md\",\n  },\n  fullWidth: {\n    type: Boolean,\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n});\nfunction getClasses(variant, color, size, fullWidth, disabled) {\n  let colorValue, sizeValue, fullWidthValue, activeValue;\n\n  // Setting the button variant and color\n  if (variant === \"gradient\") {\n    colorValue = `bg-gradient-${color}`;\n  } else if (variant === \"outline\") {\n    colorValue = `btn-outline-${color}`;\n  } else {\n    colorValue = `btn-${color}`;\n  }\n\n  sizeValue = size && `btn-${size}`;\n\n  fullWidthValue = fullWidth && `w-100`;\n\n  activeValue = disabled && `disabled`;\n\n  return `${colorValue} ${sizeValue} ${fullWidthValue} ${activeValue}`;\n}\n</script>\n<template>\n  <button\n    class=\"btn\"\n    :class=\"getClasses(variant, color, size, fullWidth, disabled)\"\n  >\n    <slot />\n  </button>\n</template>"]},"metadata":{},"sourceType":"module"}